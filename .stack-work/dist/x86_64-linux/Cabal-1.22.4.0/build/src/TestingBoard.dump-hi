
==================== FINAL INTERFACE ====================
2016-01-03 05:36:02.261892 UTC

interface hches_3PXdSEAhhp2JIrhYvA7RvZ:TestingBoard 7102
  interface hash: 02cfcf73266e32b2176fe86e6ef315f9
  ABI hash: d6cc420c9113acbc0a707afe4ab9c849
  export-list hash: a02f0bf6fca95ad31b466c56d1abdd7f
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 2bfdd69c509df0f94c327e5faec9ae27
  sig of: Nothing
  used TH splices: False
  where
exports:
  TestingBoard.tests
  TestingBoard.unsafeParseFEN
module dependencies: BitBoard Board FEN Index
package dependencies: ansi-terminal-0.6.2.3@ansit_KW0LUY2zB7JCYzE4ZYrwBg
                      ansi-wl-pprint-0.6.7.3@ansiw_KPlSW7tbqXS51Lj59n3FC4
                      array-0.5.1.0@array_E0sTtauuKsGDLZoT7lTbgZ
                      attoparsec-0.13.0.1@attop_FtJZAZu3GDOJSwmSRnXnPH base-4.8.1.0
                      binary-0.7.5.0@binar_IvYoLp9H6Xy3zEH13MmZwd
                      bool-extras-0.4.0@boole_GdoTyzdjqQqAeS3KnmOc2Q
                      bytestring-0.10.6.0@bytes_6elQVSg5cWdFrvRnfxTUrH
                      containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN
                      deepseq-1.4.1.1@deeps_LbCWUlehDDeLxurARKDH5o ghc-prim-0.4.0.0
                      hashable-1.2.3.3@hasha_2GTZqecVp8NJZrNuKzGxfy integer-gmp-1.0.0.0
                      primitive-0.6.1.0@primi_5Jnw7oEuYtM9dmKXelGXVb
                      scientific-0.3.4.4@scien_03wvk1zJytY0wVzR42F1U4
                      text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh
                      transformers-0.4.2.0@trans_3eG64VdP2vzGjP6wJiCp5X
                      vector-0.11.0.0@vecto_A9qWf1eecPQGJD12EBZIxF
orphans: attoparsec-0.13.0.1@attop_FtJZAZu3GDOJSwmSRnXnPH:Data.Attoparsec.ByteString.Char8
         base-4.8.1.0:GHC.Base base-4.8.1.0:GHC.Float
         binary-0.7.5.0@binar_IvYoLp9H6Xy3zEH13MmZwd:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6elQVSg5cWdFrvRnfxTUrH:Data.ByteString.Builder
         hashable-1.2.3.3@hasha_2GTZqecVp8NJZrNuKzGxfy:Data.Hashable.Generic
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Lazy
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Show
         transformers-0.4.2.0@trans_3eG64VdP2vzGjP6wJiCp5X:Control.Monad.Trans.Error
         vector-0.11.0.0@vecto_A9qWf1eecPQGJD12EBZIxF:Data.Vector.Fusion.Bundle
family instance modules: attoparsec-0.13.0.1@attop_FtJZAZu3GDOJSwmSRnXnPH:Data.Attoparsec.Internal.Types
                         base-4.8.1.0:Control.Applicative base-4.8.1.0:Data.Either
                         base-4.8.1.0:Data.Functor.Identity base-4.8.1.0:Data.Monoid
                         base-4.8.1.0:Data.Type.Equality base-4.8.1.0:Data.Void
                         base-4.8.1.0:GHC.Exts base-4.8.1.0:GHC.Generics
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.IntMap.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.IntSet.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Map.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Sequence
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Set.Base
                         primitive-0.6.1.0@primi_5Jnw7oEuYtM9dmKXelGXVb:Control.Monad.Primitive
                         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text
                         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Lazy
                         vector-0.11.0.0@vecto_A9qWf1eecPQGJD12EBZIxF:Data.Vector
import  -/  attoparsec-0.13.0.1@attop_FtJZAZu3GDOJSwmSRnXnPH:Data.Attoparsec.ByteString.Char8 f21f91f244ddfffc85e371a46be7545b
import  -/  attoparsec-0.13.0.1@attop_FtJZAZu3GDOJSwmSRnXnPH:Data.Attoparsec.ByteString.Internal 78d691ec8f4b47121e5aa69846971d69
import  -/  base-4.8.1.0:Data.Either bc9482e78cc431fce439b593377aa2e6
import  -/  base-4.8.1.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.1.0:Prelude 518f762991bc287d78f21a73c974da1f
import  -/  Board 39873f4ed53528af07e0b2ad9994c225
  exports: 4f7b98092ef87ef50bc5f50b83e780d6
  fromFEN e00769c714b69d19744f908e4bad77e9
import  -/  FEN faec11b9a63df206767d39b5afe70cab
  exports: 8539ee7adba37556989bad8e5d089858
  parseFEN e4010b101a4c380f1977261fe40412ae
588422b7ced4a0e83db1ead4404651b5
  tests :: [Board.Board]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Board.Board
                   TestingBoard.tests7
                   TestingBoard.tests1) -}
f4f8c11fd0b5dc6641bbe65ea6842cd4
  tests1 :: [Board.Board]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Board.Board
                   TestingBoard.tests5
                   TestingBoard.tests2) -}
651ef1ce87268f4bb06afa5c15a2c34d
  tests2 :: [Board.Board]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Board.Board
                   TestingBoard.tests3
                   (GHC.Types.[] @ Board.Board)) -}
8b25ebd32d8872cc069f95daaae04a2f
  tests3 :: Board.Board
  {- Unfolding: (TestingBoard.unsafeParseFEN TestingBoard.tests4) -}
6d1f006205c16fca41dc54725446ce1b
  tests4 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   s :: GHC.Prim.Addr# = "8/8/8/Pp6/8/3N4/8/K7 w - b6 0 3"#
                 } in
                 case {__pkg_ccall bytestring-0.10.6.0@bytes_6elQVSg5cWdFrvRnfxTUrH strlen GHC.Prim.Addr#
                                                                                           -> GHC.Prim.State#
                                                                                                GHC.Prim.RealWorld
                                                                                           -> (# GHC.Prim.State#
                                                                                                   GHC.Prim.RealWorld,
                                                                                                 GHC.Prim.Word# #)}
                        s
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   s
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0
                   (GHC.Prim.word2Int# ds4) } }) -}
c1794abe2e8cda81e2889b6be7f7cb94
  tests5 :: Board.Board
  {- Unfolding: (TestingBoard.unsafeParseFEN TestingBoard.tests6) -}
c3272133123a61a29a51296bdb1df22e
  tests6 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   s :: GHC.Prim.Addr#
                   = "rnbqkbnr/pp1ppppp/8/2p5/4P3/8/PPPP1PPP/RNBQKBNR w KQkq c6 0 2"#
                 } in
                 case {__pkg_ccall bytestring-0.10.6.0@bytes_6elQVSg5cWdFrvRnfxTUrH strlen GHC.Prim.Addr#
                                                                                           -> GHC.Prim.State#
                                                                                                GHC.Prim.RealWorld
                                                                                           -> (# GHC.Prim.State#
                                                                                                   GHC.Prim.RealWorld,
                                                                                                 GHC.Prim.Word# #)}
                        s
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   s
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0
                   (GHC.Prim.word2Int# ds4) } }) -}
f5ecda98c47d641ddf91118c82ade001
  tests7 :: Board.Board
  {- Unfolding: (TestingBoard.unsafeParseFEN TestingBoard.tests8) -}
bf4b29a5effbe2203e0e694c5000d489
  tests8 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   s :: GHC.Prim.Addr#
                   = "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1"#
                 } in
                 case {__pkg_ccall bytestring-0.10.6.0@bytes_6elQVSg5cWdFrvRnfxTUrH strlen GHC.Prim.Addr#
                                                                                           -> GHC.Prim.State#
                                                                                                GHC.Prim.RealWorld
                                                                                           -> (# GHC.Prim.State#
                                                                                                   GHC.Prim.RealWorld,
                                                                                                 GHC.Prim.Word# #)}
                        s
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   s
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0
                   (GHC.Prim.word2Int# ds4) } }) -}
76e607eb894a659443556e1423ff8996
  unsafeParseFEN ::
    Data.ByteString.Internal.ByteString -> Board.Board
  {- Arity: 1, Strictness: <L,1*U(U,U,U,U)>,
     Unfolding: (\ x :: Data.ByteString.Internal.ByteString ->
                 case FEN.$wa3
                        @ FEN.FEN
                        (Data.Attoparsec.ByteString.Buffer.buffer x)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.TFCo:R:StateByteString[0])))
                        0
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK @ FEN.FEN)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.TFCo:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString FEN.FEN>_R)
                        (Data.Attoparsec.ByteString.Internal.successK @ FEN.FEN)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.TFCo:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> FEN.FEN
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString FEN.FEN>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds ds1 err
                   -> case ds1 of wild1 {
                        [] -> case TestingBoard.unsafeParseFEN2 ret_ty Board.Board of {}
                        : ipv ipv1
                        -> case TestingBoard.unsafeParseFEN2 ret_ty Board.Board of {} }
                   Data.Attoparsec.Internal.Types.Partial ipv
                   -> case TestingBoard.unsafeParseFEN1 ret_ty Board.Board of {}
                   Data.Attoparsec.Internal.Types.Done ds a20
                   -> Board.fromFEN a20 }) -}
8c4710e323c16d42d14dbe56af06eb94
  unsafeParseFEN1 :: Data.Either.Either GHC.Base.String FEN.FEN
  {- Strictness: b -}
c839914442d9bf77253d0cbc4ee630f7
  unsafeParseFEN2 :: GHC.Base.String -> Board.Board
  {- Strictness: b -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

