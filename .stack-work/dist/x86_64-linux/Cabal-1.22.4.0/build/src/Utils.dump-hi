
==================== FINAL INTERFACE ====================
2016-01-06 14:31:02.613811 UTC

interface hches_3PXdSEAhhp2JIrhYvA7RvZ:Utils 7102
  interface hash: b1c7b459399d27b050da9246c667db46
  ABI hash: 1632a0446de4f113d2f751e6448ed903
  export-list hash: e5c89ca698ff3d482bec6db833ed25f4
  orphan hash: a7c44f09769d35b95d14c2fda867fb11
  flag hash: 2bfdd69c509df0f94c327e5faec9ae27
  sig of: Nothing
  used TH splices: False
  where
exports:
  Utils.ps
  Utils.put8
  Utils.showWord64
  Utils.testingMain
module dependencies: BitBoard Board FEN Index Masks MoveGeneration
                     MoveTables MoveTypes
package dependencies: ansi-terminal-0.6.2.3@ansit_KW0LUY2zB7JCYzE4ZYrwBg
                      ansi-wl-pprint-0.6.7.3@ansiw_KPlSW7tbqXS51Lj59n3FC4
                      array-0.5.1.0@array_E0sTtauuKsGDLZoT7lTbgZ
                      attoparsec-0.13.0.1@attop_FtJZAZu3GDOJSwmSRnXnPH base-4.8.1.0
                      binary-0.7.5.0@binar_IvYoLp9H6Xy3zEH13MmZwd
                      bool-extras-0.4.0@boole_GdoTyzdjqQqAeS3KnmOc2Q
                      bytestring-0.10.6.0@bytes_6elQVSg5cWdFrvRnfxTUrH
                      containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN
                      deepseq-1.4.1.1@deeps_LbCWUlehDDeLxurARKDH5o ghc-prim-0.4.0.0
                      hashable-1.2.3.3@hasha_2GTZqecVp8NJZrNuKzGxfy integer-gmp-1.0.0.0
                      pretty-1.1.2.0@prett_7UQTOB05U7lIYPkFOVraeR
                      primitive-0.6.1.0@primi_5Jnw7oEuYtM9dmKXelGXVb
                      scientific-0.3.4.4@scien_03wvk1zJytY0wVzR42F1U4
                      template-haskell-2.10.0.0 text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh
                      transformers-0.4.2.0@trans_3eG64VdP2vzGjP6wJiCp5X
                      vector-th-unbox-0.2.1.3@vecto_7UKBkJbwJOEKV3lSwERBE0
                      vector-0.11.0.0@vecto_A9qWf1eecPQGJD12EBZIxF
orphans: attoparsec-0.13.0.1@attop_FtJZAZu3GDOJSwmSRnXnPH:Data.Attoparsec.ByteString.Char8
         base-4.8.1.0:GHC.Base base-4.8.1.0:GHC.Float
         binary-0.7.5.0@binar_IvYoLp9H6Xy3zEH13MmZwd:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6elQVSg5cWdFrvRnfxTUrH:Data.ByteString.Builder
         hashable-1.2.3.3@hasha_2GTZqecVp8NJZrNuKzGxfy:Data.Hashable.Generic
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Lazy
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Show
         transformers-0.4.2.0@trans_3eG64VdP2vzGjP6wJiCp5X:Control.Monad.Trans.Error
         vector-0.11.0.0@vecto_A9qWf1eecPQGJD12EBZIxF:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vecto_A9qWf1eecPQGJD12EBZIxF:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.0.1@attop_FtJZAZu3GDOJSwmSRnXnPH:Data.Attoparsec.Internal.Types
                         base-4.8.1.0:Control.Applicative base-4.8.1.0:Data.Either
                         base-4.8.1.0:Data.Functor.Identity base-4.8.1.0:Data.Monoid
                         base-4.8.1.0:Data.Type.Equality base-4.8.1.0:Data.Void
                         base-4.8.1.0:GHC.Exts base-4.8.1.0:GHC.Generics
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.IntMap.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.IntSet.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Map.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Sequence
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Set.Base
                         hches_3PXdSEAhhp2JIrhYvA7RvZ:MoveTypes
                         pretty-1.1.2.0@prett_7UQTOB05U7lIYPkFOVraeR:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primi_5Jnw7oEuYtM9dmKXelGXVb:Control.Monad.Primitive
                         template-haskell-2.10.0.0:Language.Haskell.TH.Syntax
                         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text
                         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Lazy
                         vector-0.11.0.0@vecto_A9qWf1eecPQGJD12EBZIxF:Data.Vector
                         vector-0.11.0.0@vecto_A9qWf1eecPQGJD12EBZIxF:Data.Vector.Primitive
                         vector-0.11.0.0@vecto_A9qWf1eecPQGJD12EBZIxF:Data.Vector.Unboxed
                         vector-0.11.0.0@vecto_A9qWf1eecPQGJD12EBZIxF:Data.Vector.Unboxed.Base
import  -/  base-4.8.1.0:Data.Bits 5341167fdd5958c2b3f0dac8924f1efd
import  -/  base-4.8.1.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.1.0:GHC.List f31ed8784b3e05f1397195751f7d74ea
import  -/  base-4.8.1.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.1.0:Prelude 518f762991bc287d78f21a73c974da1f
import  -/  base-4.8.1.0:System.IO d541b8bdf18c04de3ab7ea0277c4eba3
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
import  -/  Board 39873f4ed53528af07e0b2ad9994c225
  exports: 4f7b98092ef87ef50bc5f50b83e780d6
  startingBoard 02a3f29d8c843aab699b6392ac723c6d
import  -/  MoveGeneration ce1d02882b6ddd45bc070e1ba131e4f0
  exports: 1f99f8eb6a68e1c4b2e8b815849b3aac
  generateMoves 0d5ed3035c4568476b7843285dcb965c
import  -/  MoveTypes af3194be44047c2d3b912109768e02c7
  exports: 30f47618c7224af3cabbf9f4bcec13bb
import  -/  vector-0.11.0.0@vecto_A9qWf1eecPQGJD12EBZIxF:Data.Vector.Unboxed 8bd91cd1a3cd2cbd12faec978422ccd8
e08e7eab24094910b0f623bf6c2503c2
  $slength1 ::
    Data.Vector.Unboxed.Base.Vector MoveTypes.Move -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSSS),1*U(U,1*H,1*H,1*H)>m, Inline: [NEVER] -}
1c9f9fb333909c04b8e6ecb0c303a451
  ps :: Data.Bits.FiniteBits a => a -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <S(LC(S)LL),U(U,C(U(U)),A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Utils.ps1
                  `cast`
                (forall a1.
                 <Data.Bits.FiniteBits a1>_R
                 ->_R <a1>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
462af917ad85bc3096fa5e1ebff6f154
  ps1 ::
    Data.Bits.FiniteBits a =>
    a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <S(LC(S)LL),U(U,C(U(U)),A,A)><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   $dFiniteBits :: Data.Bits.FiniteBits a1
                   eta :: a1
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Utils.ps2 (Utils.showWord64 @ a1 $dFiniteBits eta) eta1) -}
8fabfb5c70c69e90f824dc7bfc83fd92
  ps2 ::
    [GHC.Types.Char]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
12537958913369626653b0816f1b3b2f
  put8 :: GHC.Base.String -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Utils.ps2
                  `cast`
                (<[GHC.Types.Char]>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
13cfa0949955245b6cb22e8757b37bcd
  showWord1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.List.reverse1
                   @ GHC.Types.Char
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)) -}
ec071253a666658c8d9b94da42650fbe
  showWord2 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# '1') -}
741566d696c7ed19e281dd1e7b915b5f
  showWord3 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# '0') -}
2be30bce1988363822f4440343f2f823
  showWord64 :: Data.Bits.FiniteBits a => a -> GHC.Base.String
  {- Arity: 2, Strictness: <S(LC(S)LL),U(1*U,1*C1(U(U)),A,A)><L,U>,
     Unfolding: (\ @ a1
                   $dFiniteBits :: Data.Bits.FiniteBits a1
                   eta :: a1 ->
                 case Data.Bits.finiteBitSize
                        @ a1
                        $dFiniteBits
                        eta of wild { GHC.Types.I# x ->
                 let {
                   y :: GHC.Prim.Int# = GHC.Prim.-# x 1
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># 0 y) of wild1 {
                   GHC.Types.False
                   -> let {
                        $dBits :: Data.Bits.Bits a1
                        = Data.Bits.$p1FiniteBits @ a1 $dFiniteBits
                      } in
                      letrec {
                        go :: GHC.Prim.Int# -> [GHC.Types.Char]
                          {- Arity: 1, Strictness: <L,U> -}
                        = \ x1 :: GHC.Prim.Int# ->
                          GHC.Types.:
                            @ GHC.Types.Char
                            (case Data.Bits.testBit
                                    @ a1
                                    $dBits
                                    eta
                                    (GHC.Types.I# x1) of wild2 {
                               GHC.Types.False -> Utils.showWord3
                               GHC.Types.True -> Utils.showWord2 })
                            (case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.==# x1 y) of wild2 {
                               GHC.Types.False -> go (GHC.Prim.+# x1 1)
                               GHC.Types.True -> GHC.Types.[] @ GHC.Types.Char })
                      } in
                      GHC.List.reverse1
                        @ GHC.Types.Char
                        (go 0)
                        (GHC.Types.[] @ GHC.Types.Char)
                   GHC.Types.True -> Utils.showWord1 } }) -}
03049a368d94fe93526232c019f32ffc
  testingMain :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Utils.testingMain1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
1b2a9880486c73d27a9cc12ea2371427
  testingMain1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   Utils.testingMain2
                   GHC.Types.True
                   eta) -}
6dcc6f9d3b72d0b9db348631b59a3c4d
  testingMain2 :: GHC.Base.String
  {- Unfolding: (case Utils.$slength1
                        Utils.testingMain3 of ww2 { GHC.Types.I# ww3 ->
                 case GHC.Show.$wshowSignedInt
                        0
                        ww3
                        (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                 GHC.Types.: @ GHC.Types.Char ww5 ww6 } }) -}
1d4087a44e2e9d36f1565ebd0fb19c2a
  testingMain3 :: MoveTypes.Moves
  {- Unfolding: (case Board.startingBoard of ww { Board.Board ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ->
                 MoveGeneration.$wgenerateMoves
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww10
                   ww11
                   ww12
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww30
                   ww31 }) -}
"SPEC/Utils length @ Move" [ALWAYS] forall $dUnbox :: Data.Vector.Unboxed.Base.Unbox
                                                        MoveTypes.Move
  Data.Vector.Unboxed.length @ MoveTypes.Move $dUnbox
  = Utils.$slength1
"SPEC/Utils length @ Vector @ Move" [ALWAYS] forall $dVector :: Data.Vector.Generic.Base.Vector
                                                                  Data.Vector.Unboxed.Base.Vector
                                                                  MoveTypes.Move
  Data.Vector.Generic.length @ Data.Vector.Unboxed.Base.Vector
                             @ MoveTypes.Move
                             $dVector
  = Utils.$slength1
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

