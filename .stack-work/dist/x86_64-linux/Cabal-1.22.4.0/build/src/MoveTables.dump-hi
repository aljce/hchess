
==================== FINAL INTERFACE ====================
2016-01-03 04:23:15.421528 UTC

interface hches_3PXdSEAhhp2JIrhYvA7RvZ:MoveTables 7102
  interface hash: 34e5e3f0775dd4c75c58bd15e62694ca
  ABI hash: 9cba8bf51b8271cc35d6054726b13b21
  export-list hash: 5c6462c384f95468fbdd7b31dbfe5421
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 2bfdd69c509df0f94c327e5faec9ae27
  sig of: Nothing
  used TH splices: False
  where
exports:
  MoveTables.board120
  MoveTables.board64
  MoveTables.gAttack
  MoveTables.kingAttack
  MoveTables.knightAttack
  MoveTables.pawnAttackB
  MoveTables.pawnAttackW
  MoveTables.Attacks
module dependencies: Index
package dependencies: ansi-terminal-0.6.2.3@ansit_KW0LUY2zB7JCYzE4ZYrwBg
                      ansi-wl-pprint-0.6.7.3@ansiw_KPlSW7tbqXS51Lj59n3FC4
                      array-0.5.1.0@array_E0sTtauuKsGDLZoT7lTbgZ
                      attoparsec-0.13.0.1@attop_FtJZAZu3GDOJSwmSRnXnPH base-4.8.1.0
                      binary-0.7.5.0@binar_IvYoLp9H6Xy3zEH13MmZwd
                      bytestring-0.10.6.0@bytes_6elQVSg5cWdFrvRnfxTUrH
                      containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN
                      deepseq-1.4.1.1@deeps_LbCWUlehDDeLxurARKDH5o ghc-prim-0.4.0.0
                      hashable-1.2.3.3@hasha_2GTZqecVp8NJZrNuKzGxfy integer-gmp-1.0.0.0
                      primitive-0.6.1.0@primi_5Jnw7oEuYtM9dmKXelGXVb
                      scientific-0.3.4.4@scien_03wvk1zJytY0wVzR42F1U4
                      text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh
                      transformers-0.4.2.0@trans_3eG64VdP2vzGjP6wJiCp5X
                      vector-0.11.0.0@vecto_A9qWf1eecPQGJD12EBZIxF
orphans: attoparsec-0.13.0.1@attop_FtJZAZu3GDOJSwmSRnXnPH:Data.Attoparsec.ByteString.Char8
         base-4.8.1.0:GHC.Base base-4.8.1.0:GHC.Float
         binary-0.7.5.0@binar_IvYoLp9H6Xy3zEH13MmZwd:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6elQVSg5cWdFrvRnfxTUrH:Data.ByteString.Builder
         hashable-1.2.3.3@hasha_2GTZqecVp8NJZrNuKzGxfy:Data.Hashable.Generic
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Lazy
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Show
         transformers-0.4.2.0@trans_3eG64VdP2vzGjP6wJiCp5X:Control.Monad.Trans.Error
         vector-0.11.0.0@vecto_A9qWf1eecPQGJD12EBZIxF:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vecto_A9qWf1eecPQGJD12EBZIxF:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.0.1@attop_FtJZAZu3GDOJSwmSRnXnPH:Data.Attoparsec.Internal.Types
                         base-4.8.1.0:Control.Applicative base-4.8.1.0:Data.Either
                         base-4.8.1.0:Data.Functor.Identity base-4.8.1.0:Data.Monoid
                         base-4.8.1.0:Data.Type.Equality base-4.8.1.0:Data.Void
                         base-4.8.1.0:GHC.Exts base-4.8.1.0:GHC.Generics
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.IntMap.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.IntSet.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Map.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Sequence
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Set.Base
                         primitive-0.6.1.0@primi_5Jnw7oEuYtM9dmKXelGXVb:Control.Monad.Primitive
                         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text
                         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Lazy
                         vector-0.11.0.0@vecto_A9qWf1eecPQGJD12EBZIxF:Data.Vector
                         vector-0.11.0.0@vecto_A9qWf1eecPQGJD12EBZIxF:Data.Vector.Primitive
                         vector-0.11.0.0@vecto_A9qWf1eecPQGJD12EBZIxF:Data.Vector.Unboxed
                         vector-0.11.0.0@vecto_A9qWf1eecPQGJD12EBZIxF:Data.Vector.Unboxed.Base
import  -/  base-4.8.1.0:Data.Bits 5341167fdd5958c2b3f0dac8924f1efd
import  -/  base-4.8.1.0:Data.Functor 5c701b0af1708f0192a25dfe14ce6274
import  -/  base-4.8.1.0:Data.Maybe 1cb58de2b04ee3c0c0a7dc9201184aff
import  -/  base-4.8.1.0:Data.Word 448c480b98a0c18988a37db5ab829b22
import  -/  base-4.8.1.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.1.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.1.0:GHC.Word ef6286c279d61931eb675109b4b93579
import  -/  base-4.8.1.0:Prelude 518f762991bc287d78f21a73c974da1f
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  Index d8cad232a279cafde9ae933a407e67d2
  exports: f2069996af848e99f6e14ee9d6b1f04e
  Index 5c8ceb59f924ec508c7fc4cbb0c05d15
import  -/  vector-0.11.0.0@vecto_A9qWf1eecPQGJD12EBZIxF:Data.Vector 4610cc52ce9b78f79b9be7be941ffbe2
import  -/  vector-0.11.0.0@vecto_A9qWf1eecPQGJD12EBZIxF:Data.Vector.Generic 74d56cb304d573b964a4f34cbcb2b127
import  -/  vector-0.11.0.0@vecto_A9qWf1eecPQGJD12EBZIxF:Data.Vector.Unboxed 8bd91cd1a3cd2cbd12faec978422ccd8
import  -/  vector-0.11.0.0@vecto_A9qWf1eecPQGJD12EBZIxF:Data.Vector.Unboxed.Base 0761e27d6792efb778c5ac79292248a5
0ea9ae003cd173ef676b5f96438ff46e
  type Attacks = Data.Vector.Unboxed.Base.Vector GHC.Word.Word64
54f8ad20d6364f5ef0e389eb403a9e4a
  board1 ::
    GHC.Prim.State# s
    -> (# GHC.Prim.State# s, Data.Vector.Vector Index.Index #)
  {- Arity: 1,
     Unfolding: (\ @ s s1 :: GHC.Prim.State# s[OneShot] ->
                 case GHC.Prim.newArray#
                        @ GHC.Types.Int
                        @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                        0
                        (Data.Vector.Mutable.uninitialised @ GHC.Types.Int)
                        s1
                          `cast`
                        (GHC.Prim.State#
                           (Sym (Control.Monad.Primitive.TFCo:R:PrimStateST[0]
                                     <s>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                 case MoveTables.board4
                        @ s
                        GHC.Types.SPEC
                        ((Data.Vector.Mutable.MVector
                            @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                            @ GHC.Types.Int
                            0
                            0
                            ipv1)
                           `cast`
                         (Sub (Sym (Data.Vector.TFCo:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                             (GHC.ST.ST
                                                                                s)>_N <GHC.Types.Int>_N),
                         MoveTables.board3)
                        MoveTables.board2
                        8
                        ipv
                          `cast`
                        (GHC.Prim.State#
                           (Control.Monad.Primitive.TFCo:R:PrimStateST[0]
                                <s>_N))_R of ds2 { (#,#) ipv6 ipv7 ->
                 case ipv7 of wild5 { (,) v' n ->
                 case v'
                        `cast`
                      (Sub (Data.Vector.TFCo:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST
                                                                       s)>_N <GHC.Types.Int>_N) of wild { Data.Vector.Mutable.MVector dt dt1 dt2 ->
                 case n of dt5 { GHC.Types.I# dt6 ->
                 case GHC.Prim.unsafeFreezeArray#
                        @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                        @ GHC.Types.Int
                        dt2
                        ipv6
                          `cast`
                        (GHC.Prim.State#
                           (Sym (Control.Monad.Primitive.TFCo:R:PrimStateST[0]
                                     <s>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                 (# ipv2
                      `cast`
                    (GHC.Prim.State#
                       (Control.Monad.Primitive.TFCo:R:PrimStateST[0] <s>_N))_R,
                    Data.Vector.Vector @ GHC.Types.Int dt dt6 ipv3 #) } } } } } }) -}
def0304f55198f18da2e9ec39da50347
  board120 :: Data.Vector.Vector (GHC.Base.Maybe Index.Index)
f6f449bae6efaddde95cff77d26afccc
  board2 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 21) -}
5183444b18d3ca5a97550ac95351ced2
  board3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0) -}
c0dda8954d41945331b07f1eb2301428
  board4 ::
    GHC.Types.SPEC
    -> (Data.Vector.Generic.Base.Mutable
          Data.Vector.Vector
          (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
          Index.Index,
        GHC.Types.Int)
    -> Index.Index
    -> GHC.Prim.Int#
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s,
          (Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
             Index.Index,
           GHC.Types.Int) #)
  {- Arity: 5,
     Strictness: <S,1*U><L,U(U(U,U,U),U(U))><L,1*U(U)><L,U><L,U>,
     Inline: [0] -}
cb24df075a56d9379544648021c3a4f3
  board64 :: Data.Vector.Vector Index.Index
  {- Unfolding: (GHC.ST.runSTRep
                   @ (Data.Vector.Vector Index.Index)
                   MoveTables.board1) -}
ba24afb9a8a10a87f0bff4debeacaaa1
  gAttack ::
    (Index.Index -> Data.Vector.Vector Index.Index)
    -> MoveTables.Attacks
  {- Arity: 1, Strictness: <L,C(U(U,U,U))> -}
12ec1a7e361bca4147f6678a0d5e359f
  kingAttack :: MoveTables.Attacks
  {- Unfolding: (MoveTables.gAttack MoveTables.kingAttack1) -}
aa084b07e8fa84c98b90254ecb585ddb
  kingAttack1 :: Index.Index -> Data.Vector.Vector Index.Index
  {- Arity: 1,
     Unfolding: (\ i :: Index.Index ->
                 GHC.ST.runSTRep
                   @ (Data.Vector.Vector Index.Index)
                   (\ @ s s1 :: GHC.Prim.State# s[OneShot] ->
                    case GHC.Prim.newArray#
                           @ GHC.Types.Int
                           @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                           0
                           (Data.Vector.Mutable.uninitialised @ GHC.Types.Int)
                           s1
                             `cast`
                           (GHC.Prim.State#
                              (Sym (Control.Monad.Primitive.TFCo:R:PrimStateST[0]
                                        <s>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                    case MoveTables.kingAttack2
                           @ s
                           GHC.Types.SPEC
                           ((Data.Vector.Mutable.MVector
                               @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                               @ GHC.Types.Int
                               0
                               0
                               ipv1)
                              `cast`
                            (Sub (Sym (Data.Vector.TFCo:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                (GHC.ST.ST
                                                                                   s)>_N <GHC.Types.Int>_N),
                            MoveTables.board3)
                           (GHC.Types.:
                              @ Index.Index
                              (case i of wild { GHC.Types.I# x ->
                               GHC.Types.I# (GHC.Prim.-# x 11) })
                              (GHC.Types.:
                                 @ Index.Index
                                 (case i of wild { GHC.Types.I# x ->
                                  GHC.Types.I# (GHC.Prim.-# x 10) })
                                 (GHC.Types.:
                                    @ Index.Index
                                    (case i of wild { GHC.Types.I# x ->
                                     GHC.Types.I# (GHC.Prim.-# x 9) })
                                    (GHC.Types.:
                                       @ Index.Index
                                       (case i of wild { GHC.Types.I# x ->
                                        GHC.Types.I# (GHC.Prim.-# x 1) })
                                       (GHC.Types.:
                                          @ Index.Index
                                          (case i of wild { GHC.Types.I# x ->
                                           GHC.Types.I# (GHC.Prim.+# x 1) })
                                          (GHC.Types.:
                                             @ Index.Index
                                             (case i of wild { GHC.Types.I# x ->
                                              GHC.Types.I# (GHC.Prim.+# x 9) })
                                             (GHC.Types.:
                                                @ Index.Index
                                                (case i of wild { GHC.Types.I# x ->
                                                 GHC.Types.I# (GHC.Prim.+# x 10) })
                                                (GHC.Types.:
                                                   @ Index.Index
                                                   (case i of wild { GHC.Types.I# x ->
                                                    GHC.Types.I# (GHC.Prim.+# x 11) })
                                                   (GHC.Types.[] @ Index.Index)))))))))
                           ipv
                             `cast`
                           (GHC.Prim.State#
                              (Control.Monad.Primitive.TFCo:R:PrimStateST[0]
                                   <s>_N))_R of ds2 { (#,#) ipv6 ipv7 ->
                    case ipv7 of wild5 { (,) v' n ->
                    case v'
                           `cast`
                         (Sub (Data.Vector.TFCo:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                       (GHC.ST.ST
                                                                          s)>_N <GHC.Types.Int>_N) of wild { Data.Vector.Mutable.MVector dt dt1 dt2 ->
                    case n of dt5 { GHC.Types.I# dt6 ->
                    case GHC.Prim.unsafeFreezeArray#
                           @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                           @ GHC.Types.Int
                           dt2
                           ipv6
                             `cast`
                           (GHC.Prim.State#
                              (Sym (Control.Monad.Primitive.TFCo:R:PrimStateST[0]
                                        <s>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                    (# ipv2
                         `cast`
                       (GHC.Prim.State#
                          (Control.Monad.Primitive.TFCo:R:PrimStateST[0] <s>_N))_R,
                       Data.Vector.Vector @ GHC.Types.Int dt dt6 ipv3 #) } } } } } })) -}
7d4fd69286f1fa936ecd8c4750160aed
  kingAttack2 ::
    GHC.Types.SPEC
    -> (Data.Vector.Generic.Base.Mutable
          Data.Vector.Vector
          (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
          Index.Index,
        GHC.Types.Int)
    -> [Index.Index]
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s,
          (Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
             Index.Index,
           GHC.Types.Int) #)
  {- Arity: 4, Strictness: <S,1*U><L,U(U(U,U,U),U(U))><S,1*U><L,U> -}
288980a0710a8073e859740de0a1bf2a
  knightAttack :: MoveTables.Attacks
  {- Unfolding: (MoveTables.gAttack MoveTables.knightAttack1) -}
6ba0501a14d1c3d882f3c6c00510dd2b
  knightAttack1 :: Index.Index -> Data.Vector.Vector Index.Index
  {- Arity: 1,
     Unfolding: (\ i :: Index.Index ->
                 GHC.ST.runSTRep
                   @ (Data.Vector.Vector Index.Index)
                   (\ @ s s1 :: GHC.Prim.State# s[OneShot] ->
                    case GHC.Prim.newArray#
                           @ GHC.Types.Int
                           @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                           0
                           (Data.Vector.Mutable.uninitialised @ GHC.Types.Int)
                           s1
                             `cast`
                           (GHC.Prim.State#
                              (Sym (Control.Monad.Primitive.TFCo:R:PrimStateST[0]
                                        <s>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                    case MoveTables.knightAttack2
                           @ s
                           GHC.Types.SPEC
                           ((Data.Vector.Mutable.MVector
                               @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                               @ GHC.Types.Int
                               0
                               0
                               ipv1)
                              `cast`
                            (Sub (Sym (Data.Vector.TFCo:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                (GHC.ST.ST
                                                                                   s)>_N <GHC.Types.Int>_N),
                            MoveTables.board3)
                           (GHC.Types.:
                              @ Index.Index
                              (case i of wild { GHC.Types.I# x ->
                               GHC.Types.I# (GHC.Prim.+# x 8) })
                              (GHC.Types.:
                                 @ Index.Index
                                 (case i of wild { GHC.Types.I# x ->
                                  GHC.Types.I# (GHC.Prim.+# x 12) })
                                 (GHC.Types.:
                                    @ Index.Index
                                    (case i of wild { GHC.Types.I# x ->
                                     GHC.Types.I# (GHC.Prim.-# x 8) })
                                    (GHC.Types.:
                                       @ Index.Index
                                       (case i of wild { GHC.Types.I# x ->
                                        GHC.Types.I# (GHC.Prim.-# x 12) })
                                       (GHC.Types.:
                                          @ Index.Index
                                          (case i of wild { GHC.Types.I# x ->
                                           GHC.Types.I# (GHC.Prim.+# x 19) })
                                          (GHC.Types.:
                                             @ Index.Index
                                             (case i of wild { GHC.Types.I# x ->
                                              GHC.Types.I# (GHC.Prim.+# x 21) })
                                             (GHC.Types.:
                                                @ Index.Index
                                                (case i of wild { GHC.Types.I# x ->
                                                 GHC.Types.I# (GHC.Prim.-# x 19) })
                                                (GHC.Types.:
                                                   @ Index.Index
                                                   (case i of wild { GHC.Types.I# x ->
                                                    GHC.Types.I# (GHC.Prim.-# x 21) })
                                                   (GHC.Types.[] @ Index.Index)))))))))
                           ipv
                             `cast`
                           (GHC.Prim.State#
                              (Control.Monad.Primitive.TFCo:R:PrimStateST[0]
                                   <s>_N))_R of ds2 { (#,#) ipv6 ipv7 ->
                    case ipv7 of wild5 { (,) v' n ->
                    case v'
                           `cast`
                         (Sub (Data.Vector.TFCo:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                       (GHC.ST.ST
                                                                          s)>_N <GHC.Types.Int>_N) of wild { Data.Vector.Mutable.MVector dt dt1 dt2 ->
                    case n of dt5 { GHC.Types.I# dt6 ->
                    case GHC.Prim.unsafeFreezeArray#
                           @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                           @ GHC.Types.Int
                           dt2
                           ipv6
                             `cast`
                           (GHC.Prim.State#
                              (Sym (Control.Monad.Primitive.TFCo:R:PrimStateST[0]
                                        <s>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                    (# ipv2
                         `cast`
                       (GHC.Prim.State#
                          (Control.Monad.Primitive.TFCo:R:PrimStateST[0] <s>_N))_R,
                       Data.Vector.Vector @ GHC.Types.Int dt dt6 ipv3 #) } } } } } })) -}
b70a62d904728ad0d105b33a0b60380f
  knightAttack2 ::
    GHC.Types.SPEC
    -> (Data.Vector.Generic.Base.Mutable
          Data.Vector.Vector
          (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
          Index.Index,
        GHC.Types.Int)
    -> [Index.Index]
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s,
          (Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
             Index.Index,
           GHC.Types.Int) #)
  {- Arity: 4, Strictness: <S,1*U><L,U(U(U,U,U),U(U))><S,1*U><L,U> -}
2d06795a3fe097bcc8e268117128239c
  pawnAttackB :: MoveTables.Attacks
  {- Unfolding: (MoveTables.gAttack MoveTables.pawnAttackB1) -}
aef45e5e9dcd6ed84591c6f94c7536e5
  pawnAttackB1 :: Index.Index -> Data.Vector.Vector Index.Index
  {- Arity: 1,
     Unfolding: (\ i :: Index.Index ->
                 case i of wild { GHC.Types.I# x ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# x 91) of wild1 {
                   GHC.Types.False -> Data.Vector.empty @ Index.Index
                   GHC.Types.True
                   -> GHC.ST.runSTRep
                        @ (Data.Vector.Vector Index.Index)
                        (\ @ s s1 :: GHC.Prim.State# s[OneShot] ->
                         case GHC.Prim.newArray#
                                @ GHC.Types.Int
                                @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                0
                                (Data.Vector.Mutable.uninitialised @ GHC.Types.Int)
                                s1
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.TFCo:R:PrimStateST[0]
                                             <s>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                         case MoveTables.pawnAttackB2
                                @ s
                                GHC.Types.SPEC
                                ((Data.Vector.Mutable.MVector
                                    @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                    @ GHC.Types.Int
                                    0
                                    0
                                    ipv1)
                                   `cast`
                                 (Sub (Sym (Data.Vector.TFCo:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                     (GHC.ST.ST
                                                                                        s)>_N <GHC.Types.Int>_N),
                                 MoveTables.board3)
                                (GHC.Types.:
                                   @ Index.Index
                                   (GHC.Types.I# (GHC.Prim.-# x 9))
                                   (GHC.Types.:
                                      @ Index.Index
                                      (GHC.Types.I# (GHC.Prim.-# x 11))
                                      (GHC.Types.[] @ Index.Index)))
                                ipv
                                  `cast`
                                (GHC.Prim.State#
                                   (Control.Monad.Primitive.TFCo:R:PrimStateST[0]
                                        <s>_N))_R of ds2 { (#,#) ipv6 ipv7 ->
                         case ipv7 of wild5 { (,) v' n ->
                         case v'
                                `cast`
                              (Sub (Data.Vector.TFCo:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                            (GHC.ST.ST
                                                                               s)>_N <GHC.Types.Int>_N) of wild2 { Data.Vector.Mutable.MVector dt dt1 dt2 ->
                         case n of dt5 { GHC.Types.I# dt6 ->
                         case GHC.Prim.unsafeFreezeArray#
                                @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                @ GHC.Types.Int
                                dt2
                                ipv6
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.TFCo:R:PrimStateST[0]
                                             <s>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                         (# ipv2
                              `cast`
                            (GHC.Prim.State#
                               (Control.Monad.Primitive.TFCo:R:PrimStateST[0] <s>_N))_R,
                            Data.Vector.Vector
                              @ GHC.Types.Int
                              dt
                              dt6
                              ipv3 #) } } } } } }) } }) -}
e7608ad19b2c79580052d4a653ffcb3f
  pawnAttackB2 ::
    GHC.Types.SPEC
    -> (Data.Vector.Generic.Base.Mutable
          Data.Vector.Vector
          (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
          Index.Index,
        GHC.Types.Int)
    -> [Index.Index]
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s,
          (Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
             Index.Index,
           GHC.Types.Int) #)
  {- Arity: 4, Strictness: <S,1*U><L,U(U(U,U,U),U(U))><S,1*U><L,U> -}
8202b60af84ce7fb3a7d09e0df1a2b79
  pawnAttackW :: MoveTables.Attacks
  {- Unfolding: (MoveTables.gAttack MoveTables.pawnAttackW1) -}
85d33ae30a4d8f188f9e3f6b738fb23c
  pawnAttackW1 :: Index.Index -> Data.Vector.Vector Index.Index
  {- Arity: 1,
     Unfolding: (\ i :: Index.Index ->
                 case i of wild { GHC.Types.I# x ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># x 28) of wild1 {
                   GHC.Types.False -> Data.Vector.empty @ Index.Index
                   GHC.Types.True
                   -> GHC.ST.runSTRep
                        @ (Data.Vector.Vector Index.Index)
                        (\ @ s s1 :: GHC.Prim.State# s[OneShot] ->
                         case GHC.Prim.newArray#
                                @ GHC.Types.Int
                                @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                0
                                (Data.Vector.Mutable.uninitialised @ GHC.Types.Int)
                                s1
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.TFCo:R:PrimStateST[0]
                                             <s>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                         case MoveTables.pawnAttackW2
                                @ s
                                GHC.Types.SPEC
                                ((Data.Vector.Mutable.MVector
                                    @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                    @ GHC.Types.Int
                                    0
                                    0
                                    ipv1)
                                   `cast`
                                 (Sub (Sym (Data.Vector.TFCo:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                     (GHC.ST.ST
                                                                                        s)>_N <GHC.Types.Int>_N),
                                 MoveTables.board3)
                                (GHC.Types.:
                                   @ Index.Index
                                   (GHC.Types.I# (GHC.Prim.+# x 9))
                                   (GHC.Types.:
                                      @ Index.Index
                                      (GHC.Types.I# (GHC.Prim.+# x 11))
                                      (GHC.Types.[] @ Index.Index)))
                                ipv
                                  `cast`
                                (GHC.Prim.State#
                                   (Control.Monad.Primitive.TFCo:R:PrimStateST[0]
                                        <s>_N))_R of ds2 { (#,#) ipv6 ipv7 ->
                         case ipv7 of wild5 { (,) v' n ->
                         case v'
                                `cast`
                              (Sub (Data.Vector.TFCo:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                            (GHC.ST.ST
                                                                               s)>_N <GHC.Types.Int>_N) of wild2 { Data.Vector.Mutable.MVector dt dt1 dt2 ->
                         case n of dt5 { GHC.Types.I# dt6 ->
                         case GHC.Prim.unsafeFreezeArray#
                                @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                @ GHC.Types.Int
                                dt2
                                ipv6
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.TFCo:R:PrimStateST[0]
                                             <s>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                         (# ipv2
                              `cast`
                            (GHC.Prim.State#
                               (Control.Monad.Primitive.TFCo:R:PrimStateST[0] <s>_N))_R,
                            Data.Vector.Vector
                              @ GHC.Types.Int
                              dt
                              dt6
                              ipv3 #) } } } } } }) } }) -}
eca0bc4d172c4509bbade617c640fdc3
  pawnAttackW2 ::
    GHC.Types.SPEC
    -> (Data.Vector.Generic.Base.Mutable
          Data.Vector.Vector
          (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
          Index.Index,
        GHC.Types.Int)
    -> [Index.Index]
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s,
          (Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
             Index.Index,
           GHC.Types.Int) #)
  {- Arity: 4, Strictness: <S,1*U><L,U(U(U,U,U),U(U))><S,1*U><L,U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

