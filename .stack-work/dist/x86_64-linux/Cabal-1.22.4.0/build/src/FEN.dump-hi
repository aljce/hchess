
==================== FINAL INTERFACE ====================
2016-01-02 04:04:55.931649 UTC

interface hches_KF6MDI5eODG4Q8cKhuw0mn:FEN 7102
  interface hash: c13e9e2863d43e2c89719ad76f123b03
  ABI hash: 3fce280e977d444bdc87762eb15930b4
  export-list hash: 61a1675b53e78cf562ba0fa79f29a6ad
  orphan hash: 39df3fb0deb2ed4d9432130b79d14569
  flag hash: 2bfdd69c509df0f94c327e5faec9ae27
  sig of: Nothing
  used TH splices: False
  where
exports:
  FEN.Black
  FEN.White
  FEN.castlingRightsToDoc
  FEN.charToBool
  FEN.fenToDoc
  FEN.parseCastling
  FEN.parseEnPassant
  FEN.parseFEN
  FEN.parseTurn
  FEN.simplifyFENBoard
  FEN.startingFEN
  FEN.testingFEN
  FEN.toBitBoard
  FEN.Castling{FEN.Castling FEN.kingSideB FEN.kingSideW FEN.queenSideB FEN.queenSideW}
  FEN.FEN{FEN.FEN FEN.bitBoard FEN.castlingRights FEN.enPassant FEN.fullMoveClock FEN.halfMoveClock FEN.turn}
  FEN.FullMoveClock
  FEN.HalfMoveClock
  FEN.Turn{FEN.Turn}
module dependencies: BitBoard Index Utils
package dependencies: ansi-terminal-0.6.2.3@ansit_KW0LUY2zB7JCYzE4ZYrwBg
                      ansi-wl-pprint-0.6.7.3@ansiw_KPlSW7tbqXS51Lj59n3FC4
                      array-0.5.1.0@array_E0sTtauuKsGDLZoT7lTbgZ
                      attoparsec-0.13.0.1@attop_FtJZAZu3GDOJSwmSRnXnPH base-4.8.1.0
                      binary-0.7.5.0@binar_IvYoLp9H6Xy3zEH13MmZwd
                      bytestring-0.10.6.0@bytes_6elQVSg5cWdFrvRnfxTUrH
                      containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN
                      deepseq-1.4.1.1@deeps_LbCWUlehDDeLxurARKDH5o ghc-prim-0.4.0.0
                      hashable-1.2.3.3@hasha_2GTZqecVp8NJZrNuKzGxfy integer-gmp-1.0.0.0
                      primitive-0.6.1.0@primi_5Jnw7oEuYtM9dmKXelGXVb
                      scientific-0.3.4.4@scien_03wvk1zJytY0wVzR42F1U4
                      text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh
                      transformers-0.4.2.0@trans_3eG64VdP2vzGjP6wJiCp5X
                      vector-0.11.0.0@vecto_A9qWf1eecPQGJD12EBZIxF
orphans: attoparsec-0.13.0.1@attop_FtJZAZu3GDOJSwmSRnXnPH:Data.Attoparsec.ByteString.Char8
         base-4.8.1.0:GHC.Base base-4.8.1.0:GHC.Float
         binary-0.7.5.0@binar_IvYoLp9H6Xy3zEH13MmZwd:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6elQVSg5cWdFrvRnfxTUrH:Data.ByteString.Builder
         hashable-1.2.3.3@hasha_2GTZqecVp8NJZrNuKzGxfy:Data.Hashable.Generic
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Lazy
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Show
         transformers-0.4.2.0@trans_3eG64VdP2vzGjP6wJiCp5X:Control.Monad.Trans.Error
         vector-0.11.0.0@vecto_A9qWf1eecPQGJD12EBZIxF:Data.Vector.Fusion.Bundle
family instance modules: attoparsec-0.13.0.1@attop_FtJZAZu3GDOJSwmSRnXnPH:Data.Attoparsec.Internal.Types
                         base-4.8.1.0:Control.Applicative base-4.8.1.0:Data.Either
                         base-4.8.1.0:Data.Functor.Identity base-4.8.1.0:Data.Monoid
                         base-4.8.1.0:Data.Type.Equality base-4.8.1.0:Data.Void
                         base-4.8.1.0:GHC.Exts base-4.8.1.0:GHC.Generics
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.IntMap.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.IntSet.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Map.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Sequence
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Set.Base
                         primitive-0.6.1.0@primi_5Jnw7oEuYtM9dmKXelGXVb:Control.Monad.Primitive
                         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text
                         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Lazy
                         vector-0.11.0.0@vecto_A9qWf1eecPQGJD12EBZIxF:Data.Vector
import  -/  ansi-wl-pprint-0.6.7.3@ansiw_KPlSW7tbqXS51Lj59n3FC4:Text.PrettyPrint.ANSI.Leijen 8c4176551c95005818f5e57d74e5ea69
import  -/  attoparsec-0.13.0.1@attop_FtJZAZu3GDOJSwmSRnXnPH:Data.Attoparsec.ByteString.Char8 f21f91f244ddfffc85e371a46be7545b
import  -/  attoparsec-0.13.0.1@attop_FtJZAZu3GDOJSwmSRnXnPH:Data.Attoparsec.ByteString.Internal 78d691ec8f4b47121e5aa69846971d69
import  -/  attoparsec-0.13.0.1@attop_FtJZAZu3GDOJSwmSRnXnPH:Data.Attoparsec.Combinator 03c4f23f0ef2bb2228cb78afe4805624
import  -/  base-4.8.1.0:Control.Applicative a283901553892ce761385d18e455c2ce
import  -/  base-4.8.1.0:Data.Bits 5341167fdd5958c2b3f0dac8924f1efd
import  -/  base-4.8.1.0:Data.Char ba93ec4ca3776f6d9a8c8a6223b2fb26
import  -/  base-4.8.1.0:Data.Either bc9482e78cc431fce439b593377aa2e6
import  -/  base-4.8.1.0:Data.Foldable 2e5acb797cfda6b3b7fabd7052abe290
import  -/  base-4.8.1.0:Data.Functor 5c701b0af1708f0192a25dfe14ce6274
import  -/  base-4.8.1.0:Data.Maybe 1cb58de2b04ee3c0c0a7dc9201184aff
import  -/  base-4.8.1.0:Data.Tuple 012ad951a59a9d85fe1de36a2f012986
import  -/  base-4.8.1.0:Data.Word 448c480b98a0c18988a37db5ab829b22
import  -/  base-4.8.1.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.1.0:GHC.Enum d0db4d619cd8916cc7a23444816222af
import  -/  base-4.8.1.0:GHC.List f31ed8784b3e05f1397195751f7d74ea
import  -/  base-4.8.1.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.1.0:GHC.Show b8c65ca3124f92a166c9f05120382442
import  -/  base-4.8.1.0:GHC.Word ef6286c279d61931eb675109b4b93579
import  -/  base-4.8.1.0:Prelude 518f762991bc287d78f21a73c974da1f
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  BitBoard 3c244b8ec8b253f65c50911201be3573
  exports: ad24690e2a3640cdb930e8fadfacb8b5
  AllColors b78f8a8ac248941294bb2e12e1fd188b
  BitBoard 22287c6bab784c4581a89b3eac47a768
  BitBoard d9e321f5bae9df77c5aad3bd67235d5d
  bishops d334d1caee963f2fd02f14ed7dbeb9c2
  bitBoardToDoc a654da33b6a60b7eb1f3cb3540e4796d
  emptyBoard b5c998c052c85862c40f45127760d2ce
  kings 5e2d0c6397b39afadf48c9e64c688a52
  knights 6a9ad008279756688135d058a0ae1ddb
  pawns d4077106a3737c430714c19db657bcfa
  pieces 7121cd26a65c44cf2aa8bc4f638b2410
  queens 2db79008e68555eac1950de170da18e7
  rooks a9e3fe8319db9539256deb36d6b5861e
import  -/  Index 9a6c2fae8693bbf252fe29180f05c4cb
  exports: f5dacf2693e1be2d2c1d237e19d3ec25
  Index 117acc87da1ca0c97ed41ed158620142
  indexToDoc 95b611e988f9f152a46f50871a4f0423
  parseIndex 3519c28aff8e1a006084d6d8d2dc54d9
import  -/  Utils c1fcca74c7807322d8b03839708375a1
  exports: 36d236ad7b4c1b7db186f8e2df774189
  bool be303d76d08aee566bc6a591179693c3
2f29f74980cb16a8fa78dbba09a68764
  $bBlack :: FEN.Turn
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                FEN.$bBlack1 `cast` (Sym (FEN.NTCo:Turn[0])) -}
cabc4ad4b29717b0c7915f767d6be7b7
  $bBlack1 :: GHC.Word.Word8
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W8# __word 0) -}
6aadd58c0a86a16cab27f139b7c04805
  $bWhite :: FEN.Turn
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                FEN.$bWhite1 `cast` (Sym (FEN.NTCo:Turn[0])) -}
c58bff06afecaeb4f4078fc1baf2f4a7
  $bWhite1 :: GHC.Word.Word8
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W8# __word 1) -}
2323e09ed67c39a2a54caa3dc1eab936
  $fShowCastling :: GHC.Show.Show FEN.Castling
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ FEN.Castling
                  FEN.$fShowCastling_$cshowsPrec
                  FEN.$fShowCastling_$cshow
                  FEN.$fShowCastling_$cshowList -}
2323e09ed67c39a2a54caa3dc1eab936
  $fShowCastling1 :: FEN.Castling -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ w :: FEN.Castling w1 :: GHC.Base.String ->
                 case w of ww { FEN.Castling ww1 ww2 ww3 ww4 ->
                 FEN.$w$cshowsPrec 0 ww1 ww2 ww3 ww4 w1 }) -}
11cdfe250d0c2daeb442ee1c0ccf3967
  $fShowCastling2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
cadec9dacd8ab40ae75a7c5708d01c57
  $fShowCastling3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "queenSideB = "#) -}
8c568903021e6af890caca1a8a2012aa
  $fShowCastling4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "kingSideB = "#) -}
5051206eda754fe90b52c6ae91fa95ab
  $fShowCastling5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "queenSideW = "#) -}
baed41273824761f7aa83b472b989183
  $fShowCastling6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ", "#) -}
bcc79ae3529e3df58349737f3cf107ed
  $fShowCastling7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "kingSideW = "#) -}
c6bf0a116faeb78e640efd0eb4a01210
  $fShowCastling8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Castling {"#) -}
2323e09ed67c39a2a54caa3dc1eab936
  $fShowCastling_$cshow :: FEN.Castling -> GHC.Base.String
  {- Arity: 1, Strictness: <S(SSSS),1*U(U,U,U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: FEN.Castling ->
                 FEN.$fShowCastling_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
2323e09ed67c39a2a54caa3dc1eab936
  $fShowCastling_$cshowList :: [FEN.Castling] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ FEN.Castling
                   FEN.$fShowCastling1) -}
2323e09ed67c39a2a54caa3dc1eab936
  $fShowCastling_$cshowsPrec ::
    GHC.Types.Int -> FEN.Castling -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S,1*U(U)><S(SSSS),1*U(U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ w :: GHC.Types.Int w1 :: FEN.Castling w2 :: GHC.Base.String ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { FEN.Castling ww3 ww4 ww5 ww6 ->
                 FEN.$w$cshowsPrec ww1 ww3 ww4 ww5 ww6 w2 } }) -}
599fc5691a0a95a87349bc4aef807731
  $fShowFEN :: GHC.Show.Show FEN.FEN
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ FEN.FEN
                  FEN.$fShowFEN_$cshowsPrec
                  FEN.$fShowFEN_$cshow
                  FEN.$fShowFEN_$cshowList -}
599fc5691a0a95a87349bc4aef807731
  $fShowFEN1 :: FEN.FEN -> Text.PrettyPrint.ANSI.Leijen.SimpleDoc
  {- Arity: 1,
     Strictness: <L,1*U(U(A,A,A,U,U,A,U,U,A,U,U,A,U,U,A,U,U,A,U,U,A),1*U,U(U,U,U,U),U,U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: FEN.FEN ->
                 Text.PrettyPrint.ANSI.Leijen.renderFits
                   Text.PrettyPrint.ANSI.Leijen.fits1
                   FEN.$fShowFEN3
                   FEN.$fShowFEN2
                   (FEN.fenToDoc x)) -}
8d9d73fec8360abeb8db7fa1c2a0dd24
  $fShowFEN2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 80) -}
9a5feb471971eef64d2c1be7f63b10e6
  $fShowFEN3 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.F# __float 0.4) -}
599fc5691a0a95a87349bc4aef807731
  $fShowFEN_$cshow :: FEN.FEN -> GHC.Base.String
  {- Arity: 1,
     Strictness: <L,1*U(U(A,A,A,U,U,A,U,U,A,U,U,A,U,U,A,U,U,A,U,U,A),1*U,U(U,U,U,U),U,U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: FEN.FEN ->
                 Text.PrettyPrint.ANSI.Leijen.displayS
                   (FEN.$fShowFEN1 x)
                   (GHC.Types.[] @ GHC.Types.Char)) -}
599fc5691a0a95a87349bc4aef807731
  $fShowFEN_$cshowList :: [FEN.FEN] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ ls :: [FEN.FEN] s :: GHC.Base.String ->
                 GHC.Show.showList__
                   @ FEN.FEN
                   (\ eta :: FEN.FEN ->
                    Text.PrettyPrint.ANSI.Leijen.displayS (FEN.$fShowFEN1 eta))
                   ls
                   s) -}
599fc5691a0a95a87349bc4aef807731
  $fShowFEN_$cshowsPrec :: GHC.Types.Int -> FEN.FEN -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <L,A><L,1*U(U(A,A,A,U,U,A,U,U,A,U,U,A,U,U,A,U,U,A,U,U,A),1*U,U(U,U,U,U),U,U,U)>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: GHC.Types.Int eta :: FEN.FEN ->
                 Text.PrettyPrint.ANSI.Leijen.displayS (FEN.$fShowFEN1 eta)) -}
90ddf6f1251472014d16a8c7593cbf30
  $mBlack ::
    FEN.Turn -> (GHC.Prim.Void# -> r) -> (GHC.Prim.Void# -> r) -> r
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><L,1*C1(U)><L,1*C1(U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ (r :: OpenKind)
                   scrut :: FEN.Turn
                   cont :: GHC.Prim.Void# -> r
                   fail :: GHC.Prim.Void# -> r ->
                 case scrut `cast` (FEN.NTCo:Turn[0]) of wild7 { GHC.Word.W8# a9 ->
                 case a9 of wild8 {
                   DEFAULT -> fail GHC.Prim.void#
                   __word 0 -> cont GHC.Prim.void# } }) -}
10723d674a3423f62846a54362d76321
  $mWhite ::
    FEN.Turn -> (GHC.Prim.Void# -> r) -> (GHC.Prim.Void# -> r) -> r
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><L,1*C1(U)><L,1*C1(U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ (r :: OpenKind)
                   scrut :: FEN.Turn
                   cont :: GHC.Prim.Void# -> r
                   fail :: GHC.Prim.Void# -> r ->
                 case scrut `cast` (FEN.NTCo:Turn[0]) of wild7 { GHC.Word.W8# a9 ->
                 case a9 of wild8 {
                   DEFAULT -> fail GHC.Prim.void#
                   __word 1 -> cont GHC.Prim.void# } }) -}
5634fa63c562049a6e7c42c72a64478b
  $s$dmshow1 :: FEN.FEN -> GHC.Show.ShowS
  {- Arity: 1,
     Strictness: <L,1*U(U(A,A,A,U,U,A,U,U,A,U,U,A,U,U,A,U,U,A,U,U,A),1*U,U(U,U,U,U),U,U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ eta :: FEN.FEN ->
                 Text.PrettyPrint.ANSI.Leijen.displayS (FEN.$fShowFEN1 eta)) -}
385c3e3872edeeaa76c5077b47dc2612
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 6, Strictness: <L,U><S,U><S,U><S,U><S,U><L,U>,
     Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int#
                   ww1 :: GHC.Types.Bool
                   ww2 :: GHC.Types.Bool
                   ww3 :: GHC.Types.Bool
                   ww4 :: GHC.Types.Bool
                   w :: GHC.Base.String ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ x :: GHC.Base.String[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       FEN.$fShowCastling8
                       (GHC.Base.++
                          @ GHC.Types.Char
                          FEN.$fShowCastling7
                          (let {
                             eta :: GHC.Base.String
                             = GHC.Base.++
                                 @ GHC.Types.Char
                                 FEN.$fShowCastling6
                                 (GHC.Base.++
                                    @ GHC.Types.Char
                                    FEN.$fShowCastling5
                                    (let {
                                       eta1 :: GHC.Base.String
                                       = GHC.Base.++
                                           @ GHC.Types.Char
                                           FEN.$fShowCastling6
                                           (GHC.Base.++
                                              @ GHC.Types.Char
                                              FEN.$fShowCastling4
                                              (let {
                                                 eta2 :: GHC.Base.String
                                                 = GHC.Base.++
                                                     @ GHC.Types.Char
                                                     FEN.$fShowCastling6
                                                     (GHC.Base.++
                                                        @ GHC.Types.Char
                                                        FEN.$fShowCastling3
                                                        (case ww4 of wild7 {
                                                           GHC.Types.False
                                                           -> GHC.Base.++
                                                                @ GHC.Types.Char
                                                                GHC.Show.shows17
                                                                (GHC.Base.++
                                                                   @ GHC.Types.Char
                                                                   FEN.$fShowCastling2
                                                                   x)
                                                           GHC.Types.True
                                                           -> GHC.Base.++
                                                                @ GHC.Types.Char
                                                                GHC.Show.shows16
                                                                (GHC.Base.++
                                                                   @ GHC.Types.Char
                                                                   FEN.$fShowCastling2
                                                                   x) }))
                                               } in
                                               case ww3 of wild7 {
                                                 GHC.Types.False
                                                 -> GHC.Base.++
                                                      @ GHC.Types.Char
                                                      GHC.Show.shows17
                                                      eta2
                                                 GHC.Types.True
                                                 -> GHC.Base.++
                                                      @ GHC.Types.Char
                                                      GHC.Show.shows16
                                                      eta2 }))
                                     } in
                                     case ww2 of wild7 {
                                       GHC.Types.False
                                       -> GHC.Base.++ @ GHC.Types.Char GHC.Show.shows17 eta1
                                       GHC.Types.True
                                       -> GHC.Base.++ @ GHC.Types.Char GHC.Show.shows16 eta1 }))
                           } in
                           case ww1 of wild7 {
                             GHC.Types.False
                             -> GHC.Base.++ @ GHC.Types.Char GHC.Show.shows17 eta
                             GHC.Types.True
                             -> GHC.Base.++ @ GHC.Types.Char GHC.Show.shows16 eta }))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11) of wild7 {
                   GHC.Types.False -> p w
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows9
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 w)) }) -}
9ce19590634496547002f9984eeb3817
  $wa ::
    GHC.Types.Char
    -> forall r.
       GHC.Prim.Addr#
       -> GHC.ForeignPtr.ForeignPtrContents
       -> GHC.Prim.Int#
       -> GHC.Prim.Int#
       -> GHC.Prim.Int#
       -> GHC.Prim.Int#
       -> GHC.Prim.Int#
       -> Data.Attoparsec.Internal.Types.More
       -> Data.Attoparsec.Internal.Types.Failure
            Data.ByteString.Internal.ByteString
            (Data.Attoparsec.Internal.Types.State
               Data.ByteString.Internal.ByteString)
            r
       -> Data.Attoparsec.Internal.Types.Success
            Data.ByteString.Internal.ByteString
            (Data.Attoparsec.Internal.Types.State
               Data.ByteString.Internal.ByteString)
            GHC.Types.Bool
            r
       -> Data.Attoparsec.Internal.Types.IResult
            Data.ByteString.Internal.ByteString r
  {- Arity: 11,
     Strictness: <L,U(U)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ w :: GHC.Types.Char
                   @ r
                   ww :: GHC.Prim.Addr#
                   ww1 :: GHC.ForeignPtr.ForeignPtrContents
                   ww2 :: GHC.Prim.Int#
                   ww3 :: GHC.Prim.Int#
                   ww4 :: GHC.Prim.Int#
                   ww5 :: GHC.Prim.Int#
                   ww6 :: GHC.Prim.Int#
                   w1 :: Data.Attoparsec.Internal.Types.More
                   w2 :: Data.Attoparsec.Internal.Types.Failure
                           Data.ByteString.Internal.ByteString
                           (Data.Attoparsec.Internal.Types.State
                              Data.ByteString.Internal.ByteString)
                           r
                   w3 :: Data.Attoparsec.Internal.Types.Success
                           Data.ByteString.Internal.ByteString
                           (Data.Attoparsec.Internal.Types.State
                              Data.ByteString.Internal.ByteString)
                           GHC.Types.Bool
                           r ->
                 let {
                   nt :: GHC.Types.Int = GHC.Types.I# ww6
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww3 (GHC.Prim.+# ww6 1)) of wild7 {
                   GHC.Types.False
                   -> Data.Attoparsec.ByteString.Internal.$wensureSuspended
                        @ r
                        FEN.charToBool2
                        (Data.Attoparsec.ByteString.Buffer.Buf ww ww1 ww2 ww3 ww4 ww5)
                        ww6
                        w1
                        (\ t' :: Data.Attoparsec.Internal.Types.State
                                   Data.ByteString.Internal.ByteString
                           pos' :: Data.Attoparsec.Internal.Types.Pos[OneShot]
                           more' :: Data.Attoparsec.Internal.Types.More[OneShot]
                           strs :: [GHC.Base.String][OneShot]
                           msg2 :: GHC.Base.String[OneShot] ->
                         (Data.Attoparsec.Internal.Types.$w$cpure
                            @ Data.ByteString.Internal.ByteString
                            GHC.Prim.void#
                            @ GHC.Types.Bool
                            GHC.Types.False)
                           `cast`
                         (Data.Attoparsec.Internal.Types.NTCo:Parser[0]
                              <Data.ByteString.Internal.ByteString>_N <GHC.Types.Bool>_R)
                           @ r
                           t'
                           nt `cast` (Sym (Data.Attoparsec.Internal.Types.NTCo:Pos[0]))
                           more'
                           w2
                           w3)
                          `cast`
                        (Sub (Data.Attoparsec.Internal.Types.TFCo:R:StateByteString[0])
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString r>_R)
                        (\ t' :: Data.Attoparsec.ByteString.Buffer.Buffer
                           pos' :: Data.Attoparsec.Internal.Types.Pos[OneShot]
                           more' :: Data.Attoparsec.Internal.Types.More[OneShot]
                           bs' :: Data.ByteString.Internal.ByteString[OneShot] ->
                         case bs' of wild8 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                         case GHC.Prim.readWord8OffAddr#
                                @ GHC.Prim.RealWorld
                                (GHC.Prim.plusAddr# dt dt2)
                                0
                                GHC.Prim.realWorld# of ds2 { (#,#) ipv11 ipv12 ->
                         case GHC.Prim.touch#
                                @ GHC.ForeignPtr.ForeignPtrContents
                                dt1
                                ipv11 of s' { DEFAULT ->
                         case pos'
                                `cast`
                              (Data.Attoparsec.Internal.Types.NTCo:Pos[0]) of nt1 { GHC.Types.I# ipv13 ->
                         case w of wild9 { GHC.Types.C# c2 ->
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.eqChar#
                                   (GHC.Prim.chr# (GHC.Prim.word2Int# ipv12))
                                   c2) of wild10 {
                           GHC.Types.False
                           -> (Data.Attoparsec.Internal.Types.$w$cpure
                                 @ Data.ByteString.Internal.ByteString
                                 GHC.Prim.void#
                                 @ GHC.Types.Bool
                                 GHC.Types.False)
                                `cast`
                              (Data.Attoparsec.Internal.Types.NTCo:Parser[0]
                                   <Data.ByteString.Internal.ByteString>_N <GHC.Types.Bool>_R)
                                @ r
                                t'
                                  `cast`
                                (Sub (Sym (Data.Attoparsec.Internal.Types.TFCo:R:StateByteString[0])))
                                nt `cast` (Sym (Data.Attoparsec.Internal.Types.NTCo:Pos[0]))
                                more'
                                w2
                                w3
                           GHC.Types.True
                           -> w3
                                t'
                                  `cast`
                                (Sub (Sym (Data.Attoparsec.Internal.Types.TFCo:R:StateByteString[0])))
                                (GHC.Types.I# (GHC.Prim.+# ipv13 1))
                                  `cast`
                                (Sym (Data.Attoparsec.Internal.Types.NTCo:Pos[0]))
                                more'
                                GHC.Types.True } } } } } })
                   GHC.Types.True
                   -> case GHC.Prim.readWord8OffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww (GHC.Prim.+# ww2 ww6))
                             0
                             GHC.Prim.realWorld# of ds2 { (#,#) ipv11 ipv12 ->
                      case GHC.Prim.touch#
                             @ GHC.ForeignPtr.ForeignPtrContents
                             ww1
                             ipv11 of s' { DEFAULT ->
                      case w of wild8 { GHC.Types.C# c2 ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqChar#
                                (GHC.Prim.chr# (GHC.Prim.word2Int# ipv12))
                                c2) of wild9 {
                        GHC.Types.False
                        -> (Data.Attoparsec.Internal.Types.$w$cpure
                              @ Data.ByteString.Internal.ByteString
                              GHC.Prim.void#
                              @ GHC.Types.Bool
                              GHC.Types.False)
                             `cast`
                           (Data.Attoparsec.Internal.Types.NTCo:Parser[0]
                                <Data.ByteString.Internal.ByteString>_N <GHC.Types.Bool>_R)
                             @ r
                             (Data.Attoparsec.ByteString.Buffer.Buf ww ww1 ww2 ww3 ww4 ww5)
                               `cast`
                             (Sub (Sym (Data.Attoparsec.Internal.Types.TFCo:R:StateByteString[0])))
                             nt `cast` (Sym (Data.Attoparsec.Internal.Types.NTCo:Pos[0]))
                             w1
                             w2
                             w3
                        GHC.Types.True
                        -> w3
                             (Data.Attoparsec.ByteString.Buffer.Buf ww ww1 ww2 ww3 ww4 ww5)
                               `cast`
                             (Sub (Sym (Data.Attoparsec.Internal.Types.TFCo:R:StateByteString[0])))
                             (GHC.Types.I# (GHC.Prim.+# ww6 1))
                               `cast`
                             (Sym (Data.Attoparsec.Internal.Types.NTCo:Pos[0]))
                             w1
                             GHC.Types.True } } } } }) -}
14593b16efdf169e0fd9e803dc6ef8bc
  $wa1 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         FEN.Castling
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
70cb716588eaa9d96b60c9c087f6cf9f
  $wa2 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         (GHC.Base.Maybe Index.Index)
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
aa077bebdf76e884e76f0e9a66ddf3f9
  $wa3 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         FEN.FEN
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
a0aa90925e3f9a53c44d7763495f2396
  $wa4 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         FEN.Turn
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
581a8f48c52fa501644f4e6a6bc26124
  $wa5 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [GHC.Types.Char]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   w :: Data.Attoparsec.Internal.Types.State
                          Data.ByteString.Internal.ByteString
                   ww :: GHC.Prim.Int#
                   w1 :: Data.Attoparsec.Internal.Types.More
                   w2 :: Data.Attoparsec.Internal.Types.Failure
                           Data.ByteString.Internal.ByteString
                           (Data.Attoparsec.Internal.Types.State
                              Data.ByteString.Internal.ByteString)
                           r
                   w3 :: Data.Attoparsec.Internal.Types.Success
                           Data.ByteString.Internal.ByteString
                           (Data.Attoparsec.Internal.Types.State
                              Data.ByteString.Internal.ByteString)
                           [GHC.Types.Char]
                           r ->
                 Data.Attoparsec.Combinator.$wa5
                   @ [GHC.Types.Char]
                   @ GHC.Types.Char
                   FEN.simplifyFENBoard7
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.NTCo:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <[GHC.Types.Char]>_R))
                   FEN.simplifyFENBoard4
                     `cast`
                   (Sym (Data.Attoparsec.Internal.Types.NTCo:Parser[0]
                             <Data.ByteString.Internal.ByteString>_N <GHC.Types.Char>_R))
                   @ r
                   w
                   ww
                   w1
                   w2
                   (\ t' :: Data.Attoparsec.Internal.Types.State
                              Data.ByteString.Internal.ByteString
                      pos' :: Data.Attoparsec.Internal.Types.Pos[OneShot]
                      more' :: Data.Attoparsec.Internal.Types.More[OneShot]
                      a11 :: [[GHC.Types.Char]][OneShot] ->
                    w3 t' pos' more' (FEN.simplifyFENBoard2 a11))) -}
a851f8e465e9d96e8ebeab6717372b37
  $wa6 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         GHC.Types.Char
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   ww :: GHC.Prim.Addr#
                   ww1 :: GHC.ForeignPtr.ForeignPtrContents
                   ww2 :: GHC.Prim.Int#
                   ww3 :: GHC.Prim.Int#
                   ww4 :: GHC.Prim.Int#
                   ww5 :: GHC.Prim.Int#
                   ww6 :: GHC.Prim.Int#
                   w :: Data.Attoparsec.Internal.Types.More
                   w1 :: Data.Attoparsec.Internal.Types.Failure
                           Data.ByteString.Internal.ByteString
                           (Data.Attoparsec.Internal.Types.State
                              Data.ByteString.Internal.ByteString)
                           r
                   w2 :: Data.Attoparsec.Internal.Types.Success
                           Data.ByteString.Internal.ByteString
                           (Data.Attoparsec.Internal.Types.State
                              Data.ByteString.Internal.ByteString)
                           GHC.Types.Char
                           r ->
                 let {
                   $wsucc :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString
                             -> GHC.Prim.Int#
                             -> Data.Attoparsec.Internal.Types.More
                             -> GHC.Prim.Word#
                             -> Data.Attoparsec.Internal.Types.IResult
                                  Data.ByteString.Internal.ByteString r
                     {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0] -}
                   = \ w3 :: Data.Attoparsec.Internal.Types.State
                               Data.ByteString.Internal.ByteString
                       ww7 :: GHC.Prim.Int#[OneShot]
                       w4 :: Data.Attoparsec.Internal.Types.More[OneShot]
                       ww8 :: GHC.Prim.Word#[OneShot] ->
                     case GHC.Prim.chr# (GHC.Prim.word2Int# ww8) of wild7 {
                       DEFAULT
                       -> w1
                            w3
                            (GHC.Types.I# ww7)
                              `cast`
                            (Sym (Data.Attoparsec.Internal.Types.NTCo:Pos[0]))
                            w4
                            FEN.simplifyFENBoard6
                            FEN.simplifyFENBoard5
                       ' '
                       -> w2
                            w3
                            (GHC.Types.I# (GHC.Prim.+# ww7 1))
                              `cast`
                            (Sym (Data.Attoparsec.Internal.Types.NTCo:Pos[0]))
                            w4
                            FEN.simplifyFENBoard_ipv }
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww3 (GHC.Prim.+# ww6 1)) of wild7 {
                   GHC.Types.False
                   -> Data.Attoparsec.ByteString.Internal.$wensureSuspended
                        @ r
                        FEN.charToBool2
                        (Data.Attoparsec.ByteString.Buffer.Buf ww ww1 ww2 ww3 ww4 ww5)
                        ww6
                        w
                        (\ t' :: Data.Attoparsec.Internal.Types.State
                                   Data.ByteString.Internal.ByteString
                           pos' :: Data.Attoparsec.Internal.Types.Pos[OneShot]
                           more' :: Data.Attoparsec.Internal.Types.More[OneShot]
                           strs :: [GHC.Base.String][OneShot]
                           msg2 :: GHC.Base.String[OneShot] ->
                         w1
                           t'
                           pos'
                           more'
                           (GHC.Types.: @ GHC.Base.String FEN.simplifyFENBoard_msg0 strs)
                           msg2)
                          `cast`
                        (Sub (Data.Attoparsec.Internal.Types.TFCo:R:StateByteString[0])
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString r>_R)
                        (\ t' :: Data.Attoparsec.ByteString.Buffer.Buffer
                           pos' :: Data.Attoparsec.Internal.Types.Pos[OneShot]
                           more' :: Data.Attoparsec.Internal.Types.More[OneShot]
                           bs' :: Data.ByteString.Internal.ByteString[OneShot] ->
                         case bs' of wild8 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                         case GHC.Prim.readWord8OffAddr#
                                @ GHC.Prim.RealWorld
                                (GHC.Prim.plusAddr# dt dt2)
                                0
                                GHC.Prim.realWorld# of ds2 { (#,#) ipv11 ipv12 ->
                         case GHC.Prim.touch#
                                @ GHC.ForeignPtr.ForeignPtrContents
                                dt1
                                ipv11 of s' { DEFAULT ->
                         case pos'
                                `cast`
                              (Data.Attoparsec.Internal.Types.NTCo:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                         $wsucc
                           t'
                             `cast`
                           (Sub (Sym (Data.Attoparsec.Internal.Types.TFCo:R:StateByteString[0])))
                           ww8
                           more'
                           ipv12 } } } })
                   GHC.Types.True
                   -> case GHC.Prim.readWord8OffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww (GHC.Prim.+# ww2 ww6))
                             0
                             GHC.Prim.realWorld# of ds2 { (#,#) ipv11 ipv12 ->
                      case GHC.Prim.touch#
                             @ GHC.ForeignPtr.ForeignPtrContents
                             ww1
                             ipv11 of s' { DEFAULT ->
                      $wsucc
                        (Data.Attoparsec.ByteString.Buffer.Buf ww ww1 ww2 ww3 ww4 ww5)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.TFCo:R:StateByteString[0])))
                        ww6
                        w
                        ipv12 } } }) -}
63e9e3a7b9f75f32e601566589a3cbd5
  $wa7 ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [GHC.Types.Char]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
36a28c4d58ba3c37381465cfe6ac84c9
  $wfenToDoc ::
    GHC.Prim.Word#
    -> GHC.Prim.Word#
    -> GHC.Prim.Word#
    -> GHC.Prim.Word#
    -> GHC.Prim.Word#
    -> GHC.Prim.Word#
    -> GHC.Prim.Word#
    -> GHC.Prim.Word#
    -> GHC.Prim.Word#
    -> GHC.Prim.Word#
    -> GHC.Prim.Word#
    -> GHC.Prim.Word#
    -> GHC.Prim.Word#
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Base.Maybe Index.Index
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Text.PrettyPrint.ANSI.Leijen.Doc
  {- Arity: 20,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,1*U><L,U><L,U><L,U><L,U><S,U><L,U><L,U>,
     Inline: [0] -}
ecd9e346b42250a33f71f7a4e2f1ed1e
  $wgo :: [GHC.Types.Char] -> (# GHC.Types.Int, BitBoard.BitBoard #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
df6f0b864b18a3563efff882b60e7698
  pattern Black :: FEN.Turn
2323e09ed67c39a2a54caa3dc1eab936
  data Castling
    = Castling {kingSideW :: !GHC.Types.Bool,
                queenSideW :: !GHC.Types.Bool,
                kingSideB :: !GHC.Types.Bool,
                queenSideB :: !GHC.Types.Bool}
    Promotable
599fc5691a0a95a87349bc4aef807731
  data FEN
    = FEN {bitBoard :: !BitBoard.BitBoard,
           turn :: ! {-# UNPACK #-}(FEN.NTCo:Turn[0])FEN.Turn,
           castlingRights :: !FEN.Castling,
           enPassant :: !GHC.Base.Maybe Index.Index,
           halfMoveClock :: {-# UNPACK #-}FEN.HalfMoveClock,
           fullMoveClock :: {-# UNPACK #-}FEN.FullMoveClock}
264f52daa7b80006858942ea600017cb
  type FullMoveClock = GHC.Types.Int
ebb16c3b7f095929ff804903a0dbbdf0
  type HalfMoveClock = GHC.Types.Int
d8e9966a63c5a5f73393890b7d1a53f6
  newtype Turn = Turn GHC.Word.Word8
0d5737ec2d2b78ecd35a4295262cb232
  pattern White :: FEN.Turn
2d9354a679562079b427e54c8dabde38
  bitBoard :: FEN.FEN -> BitBoard.BitBoard
  RecSel FEN.FEN
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLSSLL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),A,1*H,1*H,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: FEN.FEN ->
                 case ds of wild7 { FEN.FEN ds1 dt ds2 ds3 dt1 dt2 -> ds1 }) -}
43f438ed330e661ed9ad0bf2669e03f6
  castlingRights :: FEN.FEN -> FEN.Castling
  RecSel FEN.FEN
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLSSLL),1*U(1*H,A,U(U,U,U,U),1*H,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: FEN.FEN ->
                 case ds of wild7 { FEN.FEN ds1 dt ds2 ds3 dt1 dt2 -> ds2 }) -}
be7bdce40e4bb878be0a8c847a11991e
  castlingRightsToDoc ::
    FEN.Castling -> Text.PrettyPrint.ANSI.Leijen.Doc
  {- Arity: 1, Strictness: <S(SSSS),1*U(U,U,U,U)>m7,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: FEN.Castling ->
                 case w of ww { FEN.Castling ww1 ww2 ww3 ww4 ->
                 Text.PrettyPrint.ANSI.Leijen.Cat
                   FEN.castlingRightsToDoc6
                   (let {
                      $j :: GHC.Prim.Void# -> Text.PrettyPrint.ANSI.Leijen.Doc
                        {- Arity: 1, Strictness: <L,A> -}
                      = \ w1 :: GHC.Prim.Void#[OneShot] ->
                        let {
                          a9 :: [GHC.Types.Char]
                          = case ww3 of wild7 {
                              GHC.Types.False
                              -> case ww4 of wild8 {
                                   GHC.Types.False -> GHC.Types.[] @ GHC.Types.Char
                                   GHC.Types.True
                                   -> GHC.Types.:
                                        @ GHC.Types.Char
                                        FEN.castlingRightsToDoc5
                                        (GHC.Types.[] @ GHC.Types.Char) }
                              GHC.Types.True
                              -> GHC.Types.:
                                   @ GHC.Types.Char
                                   FEN.castlingRightsToDoc4
                                   (case ww4 of wild8 {
                                      GHC.Types.False -> GHC.Types.[] @ GHC.Types.Char
                                      GHC.Types.True
                                      -> GHC.Types.:
                                           @ GHC.Types.Char
                                           FEN.castlingRightsToDoc5
                                           (GHC.Types.[] @ GHC.Types.Char) }) }
                        } in
                        case ww1 of wild7 {
                          GHC.Types.False
                          -> case ww2 of wild8 {
                               GHC.Types.False -> Text.PrettyPrint.ANSI.Leijen.string a9
                               GHC.Types.True
                               -> Text.PrettyPrint.ANSI.Leijen.string
                                    (GHC.Types.: @ GHC.Types.Char FEN.castlingRightsToDoc3 a9) }
                          GHC.Types.True
                          -> Text.PrettyPrint.ANSI.Leijen.string
                               (GHC.Types.:
                                  @ GHC.Types.Char
                                  FEN.castlingRightsToDoc2
                                  (case ww2 of wild8 {
                                     GHC.Types.False -> a9
                                     GHC.Types.True
                                     -> GHC.Types.:
                                          @ GHC.Types.Char
                                          FEN.castlingRightsToDoc3
                                          a9 })) }
                    } in
                    case ww1 of wild7 {
                      GHC.Types.False
                      -> case ww2 of wild8 {
                           GHC.Types.False
                           -> case ww3 of wild9 {
                                GHC.Types.False
                                -> case ww4 of wild10 {
                                     GHC.Types.False -> FEN.castlingRightsToDoc1
                                     GHC.Types.True -> $j GHC.Prim.void# }
                                GHC.Types.True -> $j GHC.Prim.void# }
                           GHC.Types.True -> $j GHC.Prim.void# }
                      GHC.Types.True -> $j GHC.Prim.void# }) }) -}
c5399d220c140e356c3379348a636898
  castlingRightsToDoc1 :: Text.PrettyPrint.ANSI.Leijen.Doc
  {- Unfolding: (case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        FEN.castlingRightsToDoc_wild
                        0 of ww2 { DEFAULT ->
                 Text.PrettyPrint.ANSI.Leijen.Text
                   ww2
                   FEN.castlingRightsToDoc_wild }) -}
b153012fc479afa4e5b72fdb79185aa6
  castlingRightsToDoc2 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'K') -}
db2d375ec0e618fd810bbb3f4e9974e1
  castlingRightsToDoc3 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'Q') -}
17118afd0b23841317afad8c7a79e99a
  castlingRightsToDoc4 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'k') -}
54576fb315d6736c0161c703626b3e92
  castlingRightsToDoc5 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'q') -}
2ea58047736858246c6b9dd9492f4496
  castlingRightsToDoc6 :: Text.PrettyPrint.ANSI.Leijen.Doc
  {- Unfolding: (case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        FEN.castlingRightsToDoc_wild1
                        0 of ww2 { DEFAULT ->
                 Text.PrettyPrint.ANSI.Leijen.Text
                   ww2
                   FEN.castlingRightsToDoc_wild1 }) -}
b384690c67f212bfb7449ccb090873c4
  castlingRightsToDoc_ipv :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# '-') -}
19b8bff7ab692b6a8a6e522c0fe95a91
  castlingRightsToDoc_ipv1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "astling Rights: "#) -}
7f874b18129ffe9884de16dd5d847c0b
  castlingRightsToDoc_ipv2 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'C') -}
712754a417b151ea20c3c0568ee272c9
  castlingRightsToDoc_wild :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   FEN.castlingRightsToDoc_ipv
                   (GHC.Types.[] @ GHC.Types.Char)) -}
3add4743acc99646bb7b5da37cf694ee
  castlingRightsToDoc_wild1 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   FEN.castlingRightsToDoc_ipv2
                   FEN.castlingRightsToDoc_ipv1) -}
895b9d429dd0eca2d5fb0dd94e16d873
  charToBool ::
    GHC.Types.Char
    -> Data.Attoparsec.ByteString.Internal.Parser GHC.Types.Bool
  {- Arity: 6,
     Strictness: <L,U(U)><S,1*U(U,U,U,U,U,U)><S,1*U(U)><L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                FEN.charToBool1
                  `cast`
                (<GHC.Types.Char>_R
                 ->_R Sym (Data.Attoparsec.Internal.Types.NTCo:Parser[0]
                               <Data.ByteString.Internal.ByteString>_N <GHC.Types.Bool>_R)) -}
0e25e8ffcd10c3356ea20742d5f79683
  charToBool1 ::
    GHC.Types.Char
    -> forall r.
       Data.Attoparsec.Internal.Types.State
         Data.ByteString.Internal.ByteString
       -> Data.Attoparsec.Internal.Types.Pos
       -> Data.Attoparsec.Internal.Types.More
       -> Data.Attoparsec.Internal.Types.Failure
            Data.ByteString.Internal.ByteString
            (Data.Attoparsec.Internal.Types.State
               Data.ByteString.Internal.ByteString)
            r
       -> Data.Attoparsec.Internal.Types.Success
            Data.ByteString.Internal.ByteString
            (Data.Attoparsec.Internal.Types.State
               Data.ByteString.Internal.ByteString)
            GHC.Types.Bool
            r
       -> Data.Attoparsec.Internal.Types.IResult
            Data.ByteString.Internal.ByteString r
  {- Arity: 6,
     Strictness: <L,U(U)><S,1*U(U,U,U,U,U,U)><S,1*U(U)><L,U><L,U><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (6, True, False)
                (\ w :: GHC.Types.Char
                   @ r
                   w1 :: Data.Attoparsec.Internal.Types.State
                           Data.ByteString.Internal.ByteString
                   w2 :: Data.Attoparsec.Internal.Types.Pos
                   w3 :: Data.Attoparsec.Internal.Types.More
                   w4 :: Data.Attoparsec.Internal.Types.Failure
                           Data.ByteString.Internal.ByteString
                           (Data.Attoparsec.Internal.Types.State
                              Data.ByteString.Internal.ByteString)
                           r
                   w5 :: Data.Attoparsec.Internal.Types.Success
                           Data.ByteString.Internal.ByteString
                           (Data.Attoparsec.Internal.Types.State
                              Data.ByteString.Internal.ByteString)
                           GHC.Types.Bool
                           r ->
                 case w1
                        `cast`
                      (Sub (Data.Attoparsec.Internal.Types.TFCo:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w2
                        `cast`
                      (Data.Attoparsec.Internal.Types.NTCo:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 FEN.$wa w @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w3 w4 w5 } }) -}
b03400cd41eb570ff19d662bb2707d61
  charToBool2 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 1) -}
d8c4d29f5c6a7b33a6c39c58a935c30f
  enPassant :: FEN.FEN -> GHC.Base.Maybe Index.Index
  RecSel FEN.FEN
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLSSLL),1*U(1*H,A,1*H,U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: FEN.FEN ->
                 case ds of wild7 { FEN.FEN ds1 dt ds2 ds3 dt1 dt2 -> ds3 }) -}
599fc5691a0a95a87349bc4aef807731
  fenToDoc :: FEN.FEN -> Text.PrettyPrint.ANSI.Leijen.Doc
  {- Arity: 1,
     Strictness: <S(SLSSLL),1*U(U(A,A,A,U,U,A,U,U,A,U,U,A,U,U,A,U,U,A,U,U,A),1*U,U(U,U,U,U),U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: FEN.FEN ->
                 case w of ww { FEN.FEN ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case ww1 of ww7 { BitBoard.BitBoard ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ->
                 case ww3 of ww29 { FEN.Castling ww30 ww31 ww32 ww33 ->
                 FEN.$wfenToDoc
                   ww11
                   ww12
                   ww14
                   ww15
                   ww17
                   ww18
                   ww20
                   ww21
                   ww23
                   ww24
                   ww26
                   ww27
                   ww2
                   ww30
                   ww31
                   ww32
                   ww33
                   ww4
                   ww5
                   ww6 } } }) -}
f9c8c0ca4f666159ab4eb7db0266d28b
  fullMoveClock :: FEN.FEN -> FEN.FullMoveClock
  RecSel FEN.FEN
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLSSLL),1*U(1*H,A,1*H,1*H,A,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: FEN.FEN ->
                 case ds of wild7 { FEN.FEN ds1 dt ds2 ds3 dt1 dt2 ->
                 GHC.Types.I# dt2 }) -}
81e11fb7a60d90a7b1c308658acce66a
  halfMoveClock :: FEN.FEN -> FEN.HalfMoveClock
  RecSel FEN.FEN
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLSSLL),1*U(1*H,A,1*H,1*H,U,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: FEN.FEN ->
                 case ds of wild7 { FEN.FEN ds1 dt ds2 ds3 dt1 dt2 ->
                 GHC.Types.I# dt1 }) -}
59ad60a7686251c74a996b43d231c3f4
  kingSideB :: FEN.Castling -> GHC.Types.Bool
  RecSel FEN.Castling
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SSSS),1*U(1*H,1*H,U,1*H)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: FEN.Castling ->
                 case ds of wild7 { FEN.Castling ds1 ds2 ds3 ds4 -> ds3 }) -}
928c15fd2520306331289925fd1715b0
  kingSideW :: FEN.Castling -> GHC.Types.Bool
  RecSel FEN.Castling
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SSSS),1*U(U,1*H,1*H,1*H)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: FEN.Castling ->
                 case ds of wild7 { FEN.Castling ds1 ds2 ds3 ds4 -> ds1 }) -}
43913980341a5b49d5f4293d8eda326a
  parseCastling ::
    Data.Attoparsec.Internal.Types.Parser
      Data.ByteString.Internal.ByteString FEN.Castling
  {- Arity: 5,
     Strictness: <S,1*U(U,U,U,U,U,U)><S,1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                FEN.parseCastling1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.NTCo:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <FEN.Castling>_R)) -}
17614e0bce9bc3b867234e5701971697
  parseCastling1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         FEN.Castling
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S,1*U(U,U,U,U,U,U)><S,1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   w :: Data.Attoparsec.Internal.Types.State
                          Data.ByteString.Internal.ByteString
                   w1 :: Data.Attoparsec.Internal.Types.Pos
                   w2 :: Data.Attoparsec.Internal.Types.More
                   w3 :: Data.Attoparsec.Internal.Types.Failure
                           Data.ByteString.Internal.ByteString
                           (Data.Attoparsec.Internal.Types.State
                              Data.ByteString.Internal.ByteString)
                           r
                   w4 :: Data.Attoparsec.Internal.Types.Success
                           Data.ByteString.Internal.ByteString
                           (Data.Attoparsec.Internal.Types.State
                              Data.ByteString.Internal.ByteString)
                           FEN.Castling
                           r ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.TFCo:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.NTCo:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 FEN.$wa1 @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
fd6a06c0de93344a7349cd5b8ec1a735
  parseEnPassant ::
    Data.Attoparsec.ByteString.Internal.Parser
      (GHC.Base.Maybe Index.Index)
  {- Arity: 5,
     Strictness: <S,1*U(U,U,U,U,U,U)><S,1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                FEN.parseEnPassant1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.NTCo:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N
                          <GHC.Base.Maybe Index.Index>_R)) -}
d4481cc396faee18d751a39d1ab2a984
  parseEnPassant1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         (GHC.Base.Maybe Index.Index)
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S,1*U(U,U,U,U,U,U)><S,1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   w :: Data.Attoparsec.Internal.Types.State
                          Data.ByteString.Internal.ByteString
                   w1 :: Data.Attoparsec.Internal.Types.Pos
                   w2 :: Data.Attoparsec.Internal.Types.More
                   w3 :: Data.Attoparsec.Internal.Types.Failure
                           Data.ByteString.Internal.ByteString
                           (Data.Attoparsec.Internal.Types.State
                              Data.ByteString.Internal.ByteString)
                           r
                   w4 :: Data.Attoparsec.Internal.Types.Success
                           Data.ByteString.Internal.ByteString
                           (Data.Attoparsec.Internal.Types.State
                              Data.ByteString.Internal.ByteString)
                           (GHC.Base.Maybe Index.Index)
                           r ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.TFCo:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.NTCo:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 FEN.$wa2 @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
cb9204fb8dd52fa0a776f132848c75e4
  parseFEN :: Data.Attoparsec.ByteString.Internal.Parser FEN.FEN
  {- Arity: 5,
     Strictness: <L,U><S,1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                FEN.parseFEN1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.NTCo:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <FEN.FEN>_R)) -}
6029ef836d7e388ed0e9fb2c2f236284
  parseFEN1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         FEN.FEN
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S,1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   w :: Data.Attoparsec.Internal.Types.State
                          Data.ByteString.Internal.ByteString
                   w1 :: Data.Attoparsec.Internal.Types.Pos
                   w2 :: Data.Attoparsec.Internal.Types.More
                   w3 :: Data.Attoparsec.Internal.Types.Failure
                           Data.ByteString.Internal.ByteString
                           (Data.Attoparsec.Internal.Types.State
                              Data.ByteString.Internal.ByteString)
                           r
                   w4 :: Data.Attoparsec.Internal.Types.Success
                           Data.ByteString.Internal.ByteString
                           (Data.Attoparsec.Internal.Types.State
                              Data.ByteString.Internal.ByteString)
                           FEN.FEN
                           r ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.NTCo:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 FEN.$wa3 @ r w ww1 w2 w3 w4 }) -}
b4dd6719904451e66ca94a27897cb337
  parseTurn :: Data.Attoparsec.ByteString.Internal.Parser FEN.Turn
  {- Arity: 5,
     Strictness: <S,1*U(U,U,U,U,U,U)><S,1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                FEN.parseTurn1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.NTCo:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <FEN.Turn>_R)) -}
c22964c26593f76d00427a12f44cdba2
  parseTurn1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         FEN.Turn
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S,1*U(U,U,U,U,U,U)><S,1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   w :: Data.Attoparsec.Internal.Types.State
                          Data.ByteString.Internal.ByteString
                   w1 :: Data.Attoparsec.Internal.Types.Pos
                   w2 :: Data.Attoparsec.Internal.Types.More
                   w3 :: Data.Attoparsec.Internal.Types.Failure
                           Data.ByteString.Internal.ByteString
                           (Data.Attoparsec.Internal.Types.State
                              Data.ByteString.Internal.ByteString)
                           r
                   w4 :: Data.Attoparsec.Internal.Types.Success
                           Data.ByteString.Internal.ByteString
                           (Data.Attoparsec.Internal.Types.State
                              Data.ByteString.Internal.ByteString)
                           FEN.Turn
                           r ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.TFCo:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.NTCo:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 FEN.$wa4 @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
fbea74afb7b82d1b47bc62fded1c127e
  queenSideB :: FEN.Castling -> GHC.Types.Bool
  RecSel FEN.Castling
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SSSS),1*U(1*H,1*H,1*H,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: FEN.Castling ->
                 case ds of wild7 { FEN.Castling ds1 ds2 ds3 ds4 -> ds4 }) -}
2eb571d9899855d42e3ea1dfafdbd163
  queenSideW :: FEN.Castling -> GHC.Types.Bool
  RecSel FEN.Castling
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SSSS),1*U(1*H,U,1*H,1*H)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: FEN.Castling ->
                 case ds of wild7 { FEN.Castling ds1 ds2 ds3 ds4 -> ds2 }) -}
75e223a4a2555958289769e19c7369e6
  simplifyFENBoard ::
    Data.Attoparsec.ByteString.Internal.Parser GHC.Base.String
  {- Arity: 5,
     Strictness: <L,U><S,1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                FEN.simplifyFENBoard1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.NTCo:Parser[0]
                          <Data.ByteString.Internal.ByteString>_N <[GHC.Types.Char]>_R)) -}
ec7b1cf9d4adec96f68854a8c2d61111
  simplifyFENBoard1 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [GHC.Types.Char]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <L,U><S,1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   w :: Data.Attoparsec.Internal.Types.State
                          Data.ByteString.Internal.ByteString
                   w1 :: Data.Attoparsec.Internal.Types.Pos
                   w2 :: Data.Attoparsec.Internal.Types.More
                   w3 :: Data.Attoparsec.Internal.Types.Failure
                           Data.ByteString.Internal.ByteString
                           (Data.Attoparsec.Internal.Types.State
                              Data.ByteString.Internal.ByteString)
                           r
                   w4 :: Data.Attoparsec.Internal.Types.Success
                           Data.ByteString.Internal.ByteString
                           (Data.Attoparsec.Internal.Types.State
                              Data.ByteString.Internal.ByteString)
                           [GHC.Types.Char]
                           r ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.NTCo:Pos[0]) of ww { GHC.Types.I# ww1 ->
                 FEN.$wa5 @ r w ww1 w2 w3 w4 }) -}
3b7ff46a158f7411075272b12693ae3e
  simplifyFENBoard2 :: [[GHC.Types.Char]] -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ x :: [[GHC.Types.Char]] ->
                 FEN.simplifyFENBoard_go1
                   (FEN.simplifyFENBoard_splitEvery8
                      FEN.simplifyFENBoard3
                      (FEN.simplifyFENBoard_go x))) -}
cec5d3e222cfdebf657267f87e54ee01
  simplifyFENBoard3 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 0) -}
0a8da31154ccf16a0ea99a6460ba91f4
  simplifyFENBoard4 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         GHC.Types.Char
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S,1*U(U,U,U,U,U,U)><S,1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   w :: Data.Attoparsec.Internal.Types.State
                          Data.ByteString.Internal.ByteString
                   w1 :: Data.Attoparsec.Internal.Types.Pos
                   w2 :: Data.Attoparsec.Internal.Types.More
                   w3 :: Data.Attoparsec.Internal.Types.Failure
                           Data.ByteString.Internal.ByteString
                           (Data.Attoparsec.Internal.Types.State
                              Data.ByteString.Internal.ByteString)
                           r
                   w4 :: Data.Attoparsec.Internal.Types.Success
                           Data.ByteString.Internal.ByteString
                           (Data.Attoparsec.Internal.Types.State
                              Data.ByteString.Internal.ByteString)
                           GHC.Types.Char
                           r ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.TFCo:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.NTCo:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 FEN.$wa6 @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
8ac1cd46069e73eafe7fb454b8df498a
  simplifyFENBoard5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Failed reading: satisfyWith"#) -}
36335364f072bc39e931c4e073e14de5
  simplifyFENBoard6 :: [GHC.Base.String]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   FEN.simplifyFENBoard_msg0
                   (GHC.Types.[] @ GHC.Base.String)) -}
21585d21aa161695d69eb7a814e44c9d
  simplifyFENBoard7 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.ByteString.Internal.ByteString
         (Data.Attoparsec.Internal.Types.State
            Data.ByteString.Internal.ByteString)
         [GHC.Types.Char]
         r
    -> Data.Attoparsec.Internal.Types.IResult
         Data.ByteString.Internal.ByteString r
  {- Arity: 5,
     Strictness: <S,1*U(U,U,U,U,U,U)><S,1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   w :: Data.Attoparsec.Internal.Types.State
                          Data.ByteString.Internal.ByteString
                   w1 :: Data.Attoparsec.Internal.Types.Pos
                   w2 :: Data.Attoparsec.Internal.Types.More
                   w3 :: Data.Attoparsec.Internal.Types.Failure
                           Data.ByteString.Internal.ByteString
                           (Data.Attoparsec.Internal.Types.State
                              Data.ByteString.Internal.ByteString)
                           r
                   w4 :: Data.Attoparsec.Internal.Types.Success
                           Data.ByteString.Internal.ByteString
                           (Data.Attoparsec.Internal.Types.State
                              Data.ByteString.Internal.ByteString)
                           [GHC.Types.Char]
                           r ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.TFCo:R:StateByteString[0])) of ww { Data.Attoparsec.ByteString.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.NTCo:Pos[0]) of ww7 { GHC.Types.I# ww8 ->
                 FEN.$wa7 @ r ww1 ww2 ww3 ww4 ww5 ww6 ww8 w2 w3 w4 } }) -}
6490768ec6370b4a7595d9152fbb09cf
  simplifyFENBoard_go :: [[GHC.Types.Char]] -> [GHC.Types.Char]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
4f9fdc625a821a54334c0e3ad5ad83e3
  simplifyFENBoard_go1 :: [[GHC.Types.Char]] -> [GHC.Types.Char]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
2a223cb07f8c552dfefd32afb54eb0a1
  simplifyFENBoard_ipv :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# ' ') -}
10db9219a3206057748f05933a398c9c
  simplifyFENBoard_msg0 :: GHC.Base.String
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   FEN.simplifyFENBoard_ipv
                   (GHC.Types.[] @ GHC.Types.Char)) -}
5f7a38ad7077841cb020cba1001324d4
  simplifyFENBoard_splitEvery8 ::
    GHC.Integer.Type.Integer -> [GHC.Types.Char] -> [[GHC.Types.Char]]
  {- Arity: 2, Strictness: <S,U><L,U> -}
9920b13d4c147a22746e6f8cd71da811
  startingFEN :: FEN.FEN
  {- Unfolding: (case FEN.$wa3
                        @ FEN.FEN
                        FEN.startingFEN3
                        0
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK @ FEN.FEN)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.TFCo:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString FEN.FEN>_R)
                        (Data.Attoparsec.ByteString.Internal.successK @ FEN.FEN)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.TFCo:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> FEN.FEN
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString FEN.FEN>_R) of wild7 {
                   Data.Attoparsec.Internal.Types.Fail ds ds1 err
                   -> case ds1 of wild8 {
                        [] -> case FEN.startingFEN2 ret_ty FEN.FEN of {}
                        : ipv11 ipv12 -> case FEN.startingFEN2 ret_ty FEN.FEN of {} }
                   Data.Attoparsec.Internal.Types.Partial ipv11
                   -> case GHC.Err.error
                             @ (Data.Either.Either GHC.Base.String FEN.FEN)
                             FEN.startingFEN1
                      ret_ty FEN.FEN
                      of {}
                   Data.Attoparsec.Internal.Types.Done ds a20 -> a20 }) -}
fe6c3e3da207cba257d653cc88792ebf
  startingFEN1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "parseOnly: impossible error!"#) -}
82b75f3f18ba1572a71e617b29113cbd
  startingFEN2 :: GHC.Base.String -> FEN.FEN
  {- Strictness: b -}
7eba698f3e5a12c0c1f1782b901b026c
  startingFEN3 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv11 ipv12 ->
                 let {
                   s :: GHC.Prim.Addr#
                   = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1"#
                 } in
                 case {__pkg_ccall bytestring-0.10.6.0@bytes_6elQVSg5cWdFrvRnfxTUrH strlen GHC.Prim.Addr#
                                                                                           -> GHC.Prim.State#
                                                                                                GHC.Prim.RealWorld
                                                                                           -> (# GHC.Prim.State#
                                                                                                   GHC.Prim.RealWorld,
                                                                                                 GHC.Prim.Word# #)}
                        s
                        ipv11 of wild7 { (#,#) ds3 ds4 ->
                 let {
                   dt3 :: GHC.Prim.Int# = GHC.Prim.word2Int# ds4
                 } in
                 (Data.Attoparsec.ByteString.Buffer.Buf
                    s
                    (GHC.ForeignPtr.PlainForeignPtr ipv12)
                    0
                    dt3
                    dt3
                    0)
                   `cast`
                 (Sub (Sym (Data.Attoparsec.Internal.Types.TFCo:R:StateByteString[0]))) } }) -}
e04c3946132e6104dd7985f4135034b4
  testingFEN :: FEN.FEN
  {- Unfolding: (case FEN.$wa3
                        @ FEN.FEN
                        FEN.testingFEN2
                        0
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.ByteString.Internal.failK @ FEN.FEN)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.TFCo:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString FEN.FEN>_R)
                        (Data.Attoparsec.ByteString.Internal.successK @ FEN.FEN)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.TFCo:R:StateByteString[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> FEN.FEN
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.ByteString.Internal.ByteString FEN.FEN>_R) of wild7 {
                   Data.Attoparsec.Internal.Types.Fail ds ds1 err
                   -> case ds1 of wild8 {
                        [] -> case FEN.testingFEN1 ret_ty FEN.FEN of {}
                        : ipv11 ipv12 -> case FEN.testingFEN1 ret_ty FEN.FEN of {} }
                   Data.Attoparsec.Internal.Types.Partial ipv11
                   -> case GHC.Err.error
                             @ (Data.Either.Either GHC.Base.String FEN.FEN)
                             FEN.startingFEN1
                      ret_ty FEN.FEN
                      of {}
                   Data.Attoparsec.Internal.Types.Done ds a20 -> a20 }) -}
ee0037a387233c06ba43fa2eed4c8a21
  testingFEN1 :: GHC.Base.String -> FEN.FEN
  {- Strictness: b -}
62d021164c8b6bbdc86f4aef9f95b3d5
  testingFEN2 ::
    Data.Attoparsec.Internal.Types.State
      Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv11 ipv12 ->
                 let {
                   s :: GHC.Prim.Addr# = "8/ppp1pppp/8/3p4/3P4/8/P7/8 w KQkq - 0 1"#
                 } in
                 case {__pkg_ccall bytestring-0.10.6.0@bytes_6elQVSg5cWdFrvRnfxTUrH strlen GHC.Prim.Addr#
                                                                                           -> GHC.Prim.State#
                                                                                                GHC.Prim.RealWorld
                                                                                           -> (# GHC.Prim.State#
                                                                                                   GHC.Prim.RealWorld,
                                                                                                 GHC.Prim.Word# #)}
                        s
                        ipv11 of wild7 { (#,#) ds3 ds4 ->
                 let {
                   dt3 :: GHC.Prim.Int# = GHC.Prim.word2Int# ds4
                 } in
                 (Data.Attoparsec.ByteString.Buffer.Buf
                    s
                    (GHC.ForeignPtr.PlainForeignPtr ipv12)
                    0
                    dt3
                    dt3
                    0)
                   `cast`
                 (Sub (Sym (Data.Attoparsec.Internal.Types.TFCo:R:StateByteString[0]))) } }) -}
1a5285242cf1b01d1edecdfa44072f17
  toBitBoard :: GHC.Base.String -> BitBoard.BitBoard
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ x :: GHC.Base.String ->
                 case FEN.$wgo x of ww { (#,#) ww1 ww2 ->
                 case ww2 of wild7 { BitBoard.BitBoard dt dt1 dt2 dt3 dt4 dt5 dt6 dt7 dt8 dt9 dt10 dt11 dt12 dt13 dt14 dt15 dt16 dt17 dt18 dt19 dt20 ->
                 BitBoard.BitBoard
                   (GHC.Prim.or#
                      (GHC.Prim.or#
                         (GHC.Prim.or# (GHC.Prim.or# (GHC.Prim.or# dt3 dt6) dt9) dt12)
                         dt15)
                      dt18)
                   (GHC.Prim.or#
                      (GHC.Prim.or#
                         (GHC.Prim.or# (GHC.Prim.or# (GHC.Prim.or# dt4 dt7) dt10) dt13)
                         dt16)
                      dt19)
                   (GHC.Prim.or#
                      (GHC.Prim.or#
                         (GHC.Prim.or# (GHC.Prim.or# (GHC.Prim.or# dt5 dt8) dt11) dt14)
                         dt17)
                      dt20)
                   dt3
                   dt4
                   dt5
                   dt6
                   dt7
                   dt8
                   dt9
                   dt10
                   dt11
                   dt12
                   dt13
                   dt14
                   dt15
                   dt16
                   dt17
                   dt18
                   dt19
                   dt20 } }) -}
147cd26da47ddbc051f29c8ecbc46aed
  turn :: FEN.FEN -> FEN.Turn
  RecSel FEN.FEN
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLSSLL),1*U(1*H,U,1*H,1*H,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: FEN.FEN ->
                 case ds of wild7 { FEN.FEN ds1 dt ds2 ds3 dt1 dt2 ->
                 (GHC.Word.W8# dt) `cast` (Sym (FEN.NTCo:Turn[0])) }) -}
instance GHC.Show.Show [FEN.Castling] = FEN.$fShowCastling
instance GHC.Show.Show [FEN.FEN] = FEN.$fShowFEN
"SPEC/FEN fromString @ Doc" [ALWAYS] forall tpl :: Data.String.IsString
                                                     Text.PrettyPrint.ANSI.Leijen.Doc
  Data.String.fromString @ Text.PrettyPrint.ANSI.Leijen.Doc tpl
  = Text.PrettyPrint.ANSI.Leijen.text
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

