
==================== FINAL INTERFACE ====================
2016-01-02 04:04:56.384775 UTC

interface hches_KF6MDI5eODG4Q8cKhuw0mn:Board 7102
  interface hash: 9c5e9406df7ee3d429951981fd902974
  ABI hash: 1137853594eeb2bf744304f00d9faa6d
  export-list hash: 0920de90788b9006e313d85981d5679a
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 2bfdd69c509df0f94c327e5faec9ae27
  sig of: Nothing
  used TH splices: False
  where
exports:
  Board.fromFEN
  Board.startingBoard
  Board.toFEN
  Board.Board{Board.Board Board.bKing Board.bitBoard Board.castling Board.enPassant Board.fullMoveClock Board.halfMoveClock Board.turn Board.wKing}
module dependencies: BitBoard FEN Index Utils
package dependencies: ansi-terminal-0.6.2.3@ansit_KW0LUY2zB7JCYzE4ZYrwBg
                      ansi-wl-pprint-0.6.7.3@ansiw_KPlSW7tbqXS51Lj59n3FC4
                      array-0.5.1.0@array_E0sTtauuKsGDLZoT7lTbgZ
                      attoparsec-0.13.0.1@attop_FtJZAZu3GDOJSwmSRnXnPH base-4.8.1.0
                      binary-0.7.5.0@binar_IvYoLp9H6Xy3zEH13MmZwd
                      bytestring-0.10.6.0@bytes_6elQVSg5cWdFrvRnfxTUrH
                      containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN
                      deepseq-1.4.1.1@deeps_LbCWUlehDDeLxurARKDH5o ghc-prim-0.4.0.0
                      hashable-1.2.3.3@hasha_2GTZqecVp8NJZrNuKzGxfy integer-gmp-1.0.0.0
                      primitive-0.6.1.0@primi_5Jnw7oEuYtM9dmKXelGXVb
                      scientific-0.3.4.4@scien_03wvk1zJytY0wVzR42F1U4
                      text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh
                      transformers-0.4.2.0@trans_3eG64VdP2vzGjP6wJiCp5X
                      vector-0.11.0.0@vecto_A9qWf1eecPQGJD12EBZIxF
orphans: attoparsec-0.13.0.1@attop_FtJZAZu3GDOJSwmSRnXnPH:Data.Attoparsec.ByteString.Char8
         base-4.8.1.0:GHC.Base base-4.8.1.0:GHC.Float
         binary-0.7.5.0@binar_IvYoLp9H6Xy3zEH13MmZwd:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6elQVSg5cWdFrvRnfxTUrH:Data.ByteString.Builder
         hashable-1.2.3.3@hasha_2GTZqecVp8NJZrNuKzGxfy:Data.Hashable.Generic
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Lazy
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Show
         transformers-0.4.2.0@trans_3eG64VdP2vzGjP6wJiCp5X:Control.Monad.Trans.Error
         vector-0.11.0.0@vecto_A9qWf1eecPQGJD12EBZIxF:Data.Vector.Fusion.Bundle
family instance modules: attoparsec-0.13.0.1@attop_FtJZAZu3GDOJSwmSRnXnPH:Data.Attoparsec.Internal.Types
                         base-4.8.1.0:Control.Applicative base-4.8.1.0:Data.Either
                         base-4.8.1.0:Data.Functor.Identity base-4.8.1.0:Data.Monoid
                         base-4.8.1.0:Data.Type.Equality base-4.8.1.0:Data.Void
                         base-4.8.1.0:GHC.Exts base-4.8.1.0:GHC.Generics
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.IntMap.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.IntSet.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Map.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Sequence
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Set.Base
                         primitive-0.6.1.0@primi_5Jnw7oEuYtM9dmKXelGXVb:Control.Monad.Primitive
                         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text
                         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Lazy
                         vector-0.11.0.0@vecto_A9qWf1eecPQGJD12EBZIxF:Data.Vector
import  -/  base-4.8.1.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.1.0:Prelude 518f762991bc287d78f21a73c974da1f
import  -/  BitBoard 3c244b8ec8b253f65c50911201be3573
  exports: ad24690e2a3640cdb930e8fadfacb8b5
  BitBoard d9e321f5bae9df77c5aad3bd67235d5d
import  -/  FEN 3fce280e977d444bdc87762eb15930b4
  exports: 61a1675b53e78cf562ba0fa79f29a6ad
  Castling 2323e09ed67c39a2a54caa3dc1eab936
  FEN f3657f6cd860a156bc00b2aa12e0e2ab
  FEN 599fc5691a0a95a87349bc4aef807731
  FullMoveClock 264f52daa7b80006858942ea600017cb
  HalfMoveClock ebb16c3b7f095929ff804903a0dbbdf0
  Turn d8e9966a63c5a5f73393890b7d1a53f6
  startingFEN 9920b13d4c147a22746e6f8cd71da811
import  -/  Index 9a6c2fae8693bbf252fe29180f05c4cb
  exports: f5dacf2693e1be2d2c1d237e19d3ec25
  Index 117acc87da1ca0c97ed41ed158620142
5ba416c737e30bacec3b39258beed05f
  data Board
    = Board {bitBoard :: {-# UNPACK #-}BitBoard.BitBoard,
             turn :: ! {-# UNPACK #-}(FEN.NTCo:Turn[0])FEN.Turn,
             castling :: {-# UNPACK #-}FEN.Castling,
             enPassant :: !GHC.Base.Maybe Index.Index,
             halfMoveClock :: {-# UNPACK #-}FEN.HalfMoveClock,
             fullMoveClock :: {-# UNPACK #-}FEN.FullMoveClock,
             wKing :: {-# UNPACK #-}Index.Index,
             bKing :: {-# UNPACK #-}Index.Index}
5ed7b8f490a690c237a85868a999bda0
  bKing :: Board.Board -> Index.Index
  RecSel Board.Board
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLSSSSSLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*H,1*H,1*H,1*H,1*H,A,A,A,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Board.Board ->
                 case ds of wild { Board.Board dt dt1 dt2 dt3 dt4 dt5 dt6 dt7 dt8 dt9 dt10 dt11 dt12 dt13 dt14 dt15 dt16 dt17 dt18 dt19 dt20 dt21 dt22 dt23 dt24 dt25 ds1 dt26 dt27 dt28 dt29 ->
                 GHC.Types.I# dt29 }) -}
91036b41c64c3bab63cd609e3d2c9091
  bitBoard :: Board.Board -> BitBoard.BitBoard
  RecSel Board.Board
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLSSSSSLLLL),1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,1*H,1*H,1*H,1*H,1*H,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Board.Board ->
                 case ds of wild { Board.Board dt dt1 dt2 dt3 dt4 dt5 dt6 dt7 dt8 dt9 dt10 dt11 dt12 dt13 dt14 dt15 dt16 dt17 dt18 dt19 dt20 dt21 dt22 dt23 dt24 dt25 ds1 dt26 dt27 dt28 dt29 ->
                 BitBoard.BitBoard
                   dt
                   dt1
                   dt2
                   dt3
                   dt4
                   dt5
                   dt6
                   dt7
                   dt8
                   dt9
                   dt10
                   dt11
                   dt12
                   dt13
                   dt14
                   dt15
                   dt16
                   dt17
                   dt18
                   dt19
                   dt20 }) -}
389db743294136d8eba32b9987cbe7d1
  castling :: Board.Board -> FEN.Castling
  RecSel Board.Board
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLSSSSSLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,U,U,U,U,1*H,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Board.Board ->
                 case ds of wild { Board.Board dt dt1 dt2 dt3 dt4 dt5 dt6 dt7 dt8 dt9 dt10 dt11 dt12 dt13 dt14 dt15 dt16 dt17 dt18 dt19 dt20 dt21 dt22 dt23 dt24 dt25 ds1 dt26 dt27 dt28 dt29 ->
                 FEN.Castling dt22 dt23 dt24 dt25 }) -}
88ba864357e4699b2d983ba9a1aec436
  enPassant :: Board.Board -> GHC.Base.Maybe Index.Index
  RecSel Board.Board
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLSSSSSLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*H,1*H,1*H,1*H,U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Board.Board ->
                 case ds of wild { Board.Board dt dt1 dt2 dt3 dt4 dt5 dt6 dt7 dt8 dt9 dt10 dt11 dt12 dt13 dt14 dt15 dt16 dt17 dt18 dt19 dt20 dt21 dt22 dt23 dt24 dt25 ds1 dt26 dt27 dt28 dt29 ->
                 ds1 }) -}
485670b57534c61d2b9502ea80dc39b2
  fromFEN :: FEN.FEN -> Board.Board
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLS(SSSS)SLL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U(U,U,U,U),U,U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: FEN.FEN ->
                 case ds of wild { FEN.FEN bb dt crs ep dt1 dt2 ->
                 case bb of dt3 { BitBoard.BitBoard dt4 dt5 dt6 dt7 dt8 dt9 dt10 dt11 dt12 dt13 dt14 dt15 dt16 dt17 dt18 dt19 dt20 dt21 dt22 dt23 dt24 ->
                 case crs of dt25 { FEN.Castling dt26 dt27 dt28 dt29 ->
                 Board.Board
                   dt4
                   dt5
                   dt6
                   dt7
                   dt8
                   dt9
                   dt10
                   dt11
                   dt12
                   dt13
                   dt14
                   dt15
                   dt16
                   dt17
                   dt18
                   dt19
                   dt20
                   dt21
                   dt22
                   dt23
                   dt24
                   dt
                   dt26
                   dt27
                   dt28
                   dt29
                   ep
                   dt1
                   dt2
                   0
                   0 } } }) -}
4f3858f177fe03bf653d02c2d8e70917
  fullMoveClock :: Board.Board -> FEN.FullMoveClock
  RecSel Board.Board
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLSSSSSLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*H,1*H,1*H,1*H,1*H,A,U,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Board.Board ->
                 case ds of wild { Board.Board dt dt1 dt2 dt3 dt4 dt5 dt6 dt7 dt8 dt9 dt10 dt11 dt12 dt13 dt14 dt15 dt16 dt17 dt18 dt19 dt20 dt21 dt22 dt23 dt24 dt25 ds1 dt26 dt27 dt28 dt29 ->
                 GHC.Types.I# dt27 }) -}
71b97a1cc2e56451c50db122e19e9fec
  halfMoveClock :: Board.Board -> FEN.HalfMoveClock
  RecSel Board.Board
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLSSSSSLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*H,1*H,1*H,1*H,1*H,U,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Board.Board ->
                 case ds of wild { Board.Board dt dt1 dt2 dt3 dt4 dt5 dt6 dt7 dt8 dt9 dt10 dt11 dt12 dt13 dt14 dt15 dt16 dt17 dt18 dt19 dt20 dt21 dt22 dt23 dt24 dt25 ds1 dt26 dt27 dt28 dt29 ->
                 GHC.Types.I# dt26 }) -}
e3e569d92f593ed03de4f97b24633da4
  startingBoard :: Board.Board
  {- Unfolding: (case FEN.startingFEN of wild { FEN.FEN bb dt crs ep dt1 dt2 ->
                 case bb of dt3 { BitBoard.BitBoard dt4 dt5 dt6 dt7 dt8 dt9 dt10 dt11 dt12 dt13 dt14 dt15 dt16 dt17 dt18 dt19 dt20 dt21 dt22 dt23 dt24 ->
                 case crs of dt25 { FEN.Castling dt26 dt27 dt28 dt29 ->
                 Board.Board
                   dt4
                   dt5
                   dt6
                   dt7
                   dt8
                   dt9
                   dt10
                   dt11
                   dt12
                   dt13
                   dt14
                   dt15
                   dt16
                   dt17
                   dt18
                   dt19
                   dt20
                   dt21
                   dt22
                   dt23
                   dt24
                   dt
                   dt26
                   dt27
                   dt28
                   dt29
                   ep
                   dt1
                   dt2
                   0
                   0 } } }) -}
28e789cf9361ef1d75f892e8a3c1dfd3
  toFEN :: Board.Board -> FEN.FEN
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLSSSSSLLLL),1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Board.Board ->
                 case ds of wild { Board.Board dt dt1 dt2 dt3 dt4 dt5 dt6 dt7 dt8 dt9 dt10 dt11 dt12 dt13 dt14 dt15 dt16 dt17 dt18 dt19 dt20 dt21 dt22 dt23 dt24 dt25 ep dt26 dt27 dt28 dt29 ->
                 FEN.FEN
                   (BitBoard.BitBoard
                      dt
                      dt1
                      dt2
                      dt3
                      dt4
                      dt5
                      dt6
                      dt7
                      dt8
                      dt9
                      dt10
                      dt11
                      dt12
                      dt13
                      dt14
                      dt15
                      dt16
                      dt17
                      dt18
                      dt19
                      dt20)
                   dt21
                   (FEN.Castling dt22 dt23 dt24 dt25)
                   ep
                   dt26
                   dt27 }) -}
1632f5faa2d7955d1caa915e56a9bf7b
  turn :: Board.Board -> FEN.Turn
  RecSel Board.Board
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLSSSSSLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,U,1*H,1*H,1*H,1*H,1*H,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Board.Board ->
                 case ds of wild { Board.Board dt dt1 dt2 dt3 dt4 dt5 dt6 dt7 dt8 dt9 dt10 dt11 dt12 dt13 dt14 dt15 dt16 dt17 dt18 dt19 dt20 dt21 dt22 dt23 dt24 dt25 ds1 dt26 dt27 dt28 dt29 ->
                 (GHC.Word.W8# dt21) `cast` (Sym (FEN.NTCo:Turn[0])) }) -}
55465866b0daef4e77bbc561594e5c1e
  wKing :: Board.Board -> Index.Index
  RecSel Board.Board
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLLLLLLSSSSSLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*H,1*H,1*H,1*H,1*H,A,A,U,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Board.Board ->
                 case ds of wild { Board.Board dt dt1 dt2 dt3 dt4 dt5 dt6 dt7 dt8 dt9 dt10 dt11 dt12 dt13 dt14 dt15 dt16 dt17 dt18 dt19 dt20 dt21 dt22 dt23 dt24 dt25 ds1 dt26 dt27 dt28 dt29 ->
                 GHC.Types.I# dt28 }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

